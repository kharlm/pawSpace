{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/kharl/pawSpace/screens/MatchesChat.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport uuid from 'uuid';\nimport styles from \"../styles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getDog, getDogs } from \"../actions/dog\";\nimport Card from \"./Card\";\nimport * as firebase from 'firebase';\nimport DogParks from \"./DogParks\";\nimport SwipeCards from 'react-native-swipe-cards';\nimport db from \"../config/firebase\";\nimport ConfettiCannon from 'react-native-confetti-cannon';\nimport * as Permissions from 'expo-permissions';\nimport * as Location from 'expo-location';\nimport { GiftedChat } from 'react-native-gifted-chat';\n\nvar MatchesChat = function (_Component) {\n  _inherits(MatchesChat, _Component);\n\n  function MatchesChat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MatchesChat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MatchesChat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      messages: []\n    };\n\n    _this.getMessages = function _callee() {\n      var items1, items, query, i, _i;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              items1 = [];\n              items = [];\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(db.collection('dogs').where('dogId', '==', _this.props.dog.dogId).get());\n\n            case 5:\n              query = _context.sent;\n              query.forEach(function (response) {\n                items.push(response.data());\n              });\n\n              for (i = 0; i < items[0].messages.length; i++) {\n                if (items[0].messages[i].user._id === _this.props.navigation.state.params.user.id) {\n                  items1.push(items[0].messages[i]);\n                }\n              }\n\n              for (_i = 0; _i < items1.length; _i++) {\n                items1[_i].createdAt = items1[_i].createdAt.toDate();\n              }\n\n              _this.setState({\n                messages: items1\n              });\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              alert(e);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 12]]);\n    };\n\n    return _this;\n  }\n\n  _createClass(MatchesChat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMessages();\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      });\n      var res = JSON.stringify(this.state.messages);\n      console.log(\"gifted: \" + res);\n\n      try {\n        console.log(\"inside try\");\n        db.collection('dogs').doc(this.props.dog.dogId).update({\n          messages: firebase.firestore.FieldValue.arrayUnion(messages[0])\n        });\n        db.collection('dogs').doc(this.props.navigation.state.params.user.id).update({\n          messages: firebase.firestore.FieldValue.arrayUnion(messages[0])\n        });\n      } catch (e) {\n        console.log(\"block dog error\");\n        alert(e);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var res = JSON.stringify(this.state.messages);\n      return React.createElement(GiftedChat, {\n        messages: this.state.messages,\n        onSend: function onSend(messages) {\n          return _this2.onSend(messages);\n        },\n        user: {\n          _id: this.props.dog.dogId,\n          name: this.props.dog.dogname,\n          avatar: this.props.dog.photo\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        }\n      });\n    }\n  }]);\n\n  return MatchesChat;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getDog: getDog,\n    getDogs: getDogs\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dog: state.dog,\n    cards: state.cards\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchesChat);","map":{"version":3,"sources":["/Users/kharl/pawSpace/screens/MatchesChat.js"],"names":["React","Component","connect","bindActionCreators","uuid","styles","getDog","getDogs","Card","firebase","DogParks","SwipeCards","db","ConfettiCannon","Permissions","Location","GiftedChat","MatchesChat","state","messages","getMessages","items1","items","collection","where","props","dog","dogId","get","query","forEach","response","push","data","i","length","user","_id","navigation","params","id","createdAt","toDate","setState","alert","e","previousState","append","res","JSON","stringify","console","log","doc","update","firestore","FieldValue","arrayUnion","onSend","name","dogname","avatar","photo","mapDispatchToProps","dispatch","mapStateToProps","cards"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport uuid from 'uuid'\nimport styles from '../styles'\nimport { View, Text, StyleSheet, Image, Dimensions, Platform,ScrollView, TouchableOpacity} from \"react-native\";\nimport {getDog,getDogs} from '../actions/dog'\nimport Card from './Card';\nimport * as firebase from 'firebase';\nimport DogParks from './DogParks';\nimport SwipeCards from 'react-native-swipe-cards'\nimport db from '../config/firebase';\nimport ConfettiCannon from 'react-native-confetti-cannon';\nimport * as Permissions from 'expo-permissions'\nimport * as Location from 'expo-location'\nimport { GiftedChat } from 'react-native-gifted-chat'\n//import { sendNotification } from '../redux/actions'\n\nclass MatchesChat extends Component {\n    state = {\n        messages: [],\n      }\n\n      componentDidMount(){\n      \n        this.getMessages()\n    \n      }\n\n      getMessages = async () => {\n        let items1 = []\n        let items=[]\n\n        try{\n        const query = await db.collection('dogs').where('dogId', '==', this.props.dog.dogId).get()\n        query.forEach(function(response) {\n          items.push(response.data())\n          })\n         \n          \n\n         for(let i=0;i<items[0].messages.length;i++){\n           if(items[0].messages[i].user._id===this.props.navigation.state.params.user.id){\n             items1.push(items[0].messages[i])\n           }\n         }\n          for(let i=0;i<items1.length;i++){\n            items1[i].createdAt=items1[i].createdAt.toDate()\n          }\n        \n          this.setState({\n            messages: items1       \n    })\n  }\n  catch{\n    alert(e)\n  }\n    \n  }\n\n    onSend(messages = []){\n        //this.props.dispatch(sendNotification(this.props.navigation.state.params.user.id, messages[0].user.name, messages[0].text))\n        this.setState(previousState => ({\n          messages: GiftedChat.append(previousState.messages, messages),\n        }))\n\n        let res = JSON.stringify(this.state.messages)\n       console.log(\"gifted: \"+res)\n\n\n\t\t\ttry {\n        console.log(\"inside try\")\n\t\t\t\t\n        db.collection('dogs').doc(this.props.dog.dogId).update({\n          messages: firebase.firestore.FieldValue.arrayUnion(messages[0])\n       \n      })\n\n      db.collection('dogs').doc(this.props.navigation.state.params.user.id).update({\n        messages: firebase.firestore.FieldValue.arrayUnion(messages[0])\n     \n    })\n    \n    } \n\t\t\tcatch(e) {\n\t\t\t  console.log(\"block dog error\")\n\t\t\talert(e)\n\t\t\t}\n\t\t\n\t\t  \n     \n        \n  }\n    \n    render(){\n\n       let res = JSON.stringify(this.state.messages)\n       //console.log(\"messy: \"+res)\n        return(\n            <GiftedChat\n            messages={this.state.messages}\n            onSend={messages => this.onSend(messages)}\n            user={{\n              _id: this.props.dog.dogId,\n              name: this.props.dog.dogname,\n              avatar: this.props.dog.photo\n            }}\n          />\n        )\n        }  \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({getDog,getDogs}, dispatch)\n  }\n  \n  const mapStateToProps = (state) => {\n    return {\n      \n      dog: state.dog,\n      cards: state.cards\n    }\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(MatchesChat)"]},"metadata":{},"sourceType":"module"}