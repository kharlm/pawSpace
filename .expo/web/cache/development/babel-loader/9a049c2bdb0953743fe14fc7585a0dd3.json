{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/kharl/pawSpace/screens/CategoryScreens/GenderCategory.js\";\nimport React from 'react';\nimport styles from \"../../styles.js\";\nimport styles1 from \"../../styles1\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport db from \"../../config/firebase\";\nimport { getDog } from \"../../actions/dog\";\nimport DogInfo from \"../DogInfo\";\nimport Category from \"../Category\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport RNPickerSelect from 'react-native-picker-select';\n\nvar GenderCategory = function (_React$Component) {\n  _inherits(GenderCategory, _React$Component);\n\n  function GenderCategory(props) {\n    var _this;\n\n    _classCallCheck(this, GenderCategory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GenderCategory).call(this, props));\n    _this.state = {\n      dogGender: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(GenderCategory, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"700\",\n          fontSize: 18,\n          paddingTop: 5,\n          paddingBottom: 10,\n          paddingHorizontal: width / 4 + 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        }\n      }, \"View Dogs By Gender\"), React.createElement(TouchableWithoutFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingHorizontal: width / 4,\n          paddingTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          padding: 10,\n          marginTop: 5,\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('GenderPosts', {\n            gender: 'Male'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        }\n      }, React.createElement(Category, {\n        width: width,\n        height: height,\n        info: \"Male Dogs\",\n        infoImage: require(\"../../assets/maledog.jpeg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('GenderPosts', {\n            gender: 'Female'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      }, React.createElement(Category, {\n        width: width,\n        height: height,\n        info: \"Female Dogs\",\n        infoImage: require(\"../../assets/femaledog.jpeg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      }))));\n    }\n  }]);\n\n  return GenderCategory;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getDog: getDog\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    dog: state.dog\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenderCategory);","map":{"version":3,"sources":["/Users/kharl/pawSpace/screens/CategoryScreens/GenderCategory.js"],"names":["React","styles","styles1","connect","bindActionCreators","db","getDog","DogInfo","Category","Dimensions","get","width","height","RNPickerSelect","GenderCategory","props","state","dogGender","fontWeight","fontSize","paddingTop","paddingBottom","paddingHorizontal","flexDirection","padding","marginTop","flexWrap","justifyContent","navigation","navigate","gender","require","Component","mapDispatchToProps","dispatch","mapStateToProps","user","dog"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from '../../styles.js'\nimport styles1 from '../../styles1'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { View, Text, SafeAreaView, TextInput, FlatList, Image, TouchableOpacity,Dimensions, TouchableWithoutFeedback } from 'react-native';\nimport db from '../../config/firebase';\nimport { getDog } from '../../actions/dog'\nimport DogInfo from '../DogInfo';\nimport Category from '../Category';\nimport { ScrollView } from 'react-native';\nconst  { width,height } = Dimensions.get('window');\nimport RNPickerSelect from 'react-native-picker-select';\n\nclass GenderCategory extends React.Component {\n    constructor(props) {\n        super(props);\n          this.state = { \n              dogGender: \"\"\n          }\n      }\n    render() {\n        return (\n            <ScrollView>\n            \n         \n            <Text style={{fontWeight:\"700\",fontSize: 18,paddingTop: 5,paddingBottom: 10,paddingHorizontal: (width/4) + 5 }}>View Dogs By Gender</Text>\n            <TouchableWithoutFeedback >\n            <View style={{paddingHorizontal: (width/4),paddingTop: 5 }}>\n        \n         </View>\n         </TouchableWithoutFeedback >\n            <View\n                     style={{\n                      flexDirection: \"row\",\n                      padding: 10,\n                      marginTop: 5,\n                      flexWrap: \"wrap\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n            \n            \n            <TouchableOpacity onPress={() => this.props.navigation.navigate('GenderPosts', {gender: 'Male' })}>\n            <Category\n               width={width}\n               height={height}\n               info ='Male Dogs'\n               infoImage ={require('../../assets/maledog.jpeg')}\n             />\n             </TouchableOpacity>\n   \n             <TouchableOpacity onPress={() => this.props.navigation.navigate('GenderPosts', {gender: 'Female' })}>\n               <Category\n               width={width}\n               height={height}\n               info ='Female Dogs'\n               infoImage ={require('../../assets/femaledog.jpeg')}\n             />\n             </TouchableOpacity>\n   \n             </View>\n              </ScrollView>\n       );\n        }\n       \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ getDog }, dispatch)\n  }\n  \n  const mapStateToProps = (state) => {\n    return {\n      user: state.user,\n      dog: state.dog\n    }\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(GenderCategory)"]},"metadata":{},"sourceType":"module"}