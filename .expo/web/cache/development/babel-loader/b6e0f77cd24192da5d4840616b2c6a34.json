{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport uuid from 'uuid';\nimport firebase from 'firebase';\nimport db from \"../config/firebase\";\nimport { Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\nimport * as ImageManipulator from 'expo-image-manipulator';\nvar PUSH_ENDPOINT = 'https://exp.host/--/api/v2/push/send';\nexport var uploadPhoto = function uploadPhoto(image) {\n  if (image.type === \"video\") {\n    return function _callee(dispatch) {\n      var blob, uploadTask, downloadURL;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"inside video\");\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n                var xhr = new XMLHttpRequest();\n\n                xhr.onload = function () {\n                  return resolve(xhr.response);\n                };\n\n                xhr.responseType = 'blob';\n                xhr.open('GET', image.uri, true);\n                xhr.send(null);\n              }));\n\n            case 4:\n              blob = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(firebase.storage().ref().child(uuid.v4()).put(blob));\n\n            case 7:\n              uploadTask = _context.sent;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(uploadTask.ref.getDownloadURL());\n\n            case 10:\n              downloadURL = _context.sent;\n              return _context.abrupt(\"return\", downloadURL);\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(\"in upload photo error\");\n              console.error(_context.t0);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 14]]);\n    };\n  } else {\n    return function _callee2(dispatch) {\n      var resize, blob, uploadTask, downloadURL;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"inside image\");\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(image.uri, [], {\n                format: 'jpeg',\n                compress: 0.1\n              }));\n\n            case 4:\n              resize = _context2.sent;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n                var xhr = new XMLHttpRequest();\n\n                xhr.onload = function () {\n                  return resolve(xhr.response);\n                };\n\n                xhr.responseType = 'blob';\n                xhr.open('GET', resize.uri, true);\n                xhr.send(null);\n              }));\n\n            case 7:\n              blob = _context2.sent;\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(firebase.storage().ref().child(uuid.v4()).put(blob));\n\n            case 10:\n              uploadTask = _context2.sent;\n              _context2.next = 13;\n              return _regeneratorRuntime.awrap(uploadTask.ref.getDownloadURL());\n\n            case 13:\n              downloadURL = _context2.sent;\n              return _context2.abrupt(\"return\", downloadURL);\n\n            case 17:\n              _context2.prev = 17;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(\"in upload photo error\");\n              console.error(_context2.t0);\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 17]]);\n    };\n  }\n};\nexport var allowNotifications = function allowNotifications(uid) {\n  console.log(\"in allow notifications \");\n  return function _callee3(dispatch) {\n    var permission, token, res;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"in allow notifications \");\n            console.log(\"uid: \" + uid);\n            _context3.prev = 2;\n            console.log(\"in try\");\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n          case 6:\n            permission = _context3.sent;\n\n            if (!(permission.status === 'granted')) {\n              _context3.next = 17;\n              break;\n            }\n\n            console.log(\"permission granted\");\n            _context3.next = 11;\n            return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n          case 11:\n            token = _context3.sent;\n            dispatch({\n              type: 'GET_TOKEN',\n              payload: token\n            });\n            res = JSON.stringify(token);\n            console.log(\"token \" + token);\n            db.collection('users').doc(uid).update({\n              token: token\n            });\n            console.log(\"uid\" + uid);\n\n          case 17:\n            _context3.next = 22;\n            break;\n\n          case 19:\n            _context3.prev = 19;\n            _context3.t0 = _context3[\"catch\"](2);\n            console.error(_context3.t0);\n\n          case 22:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[2, 19]]);\n  };\n};\nexport var sendNotification = function sendNotification(uid, text) {\n  return function _callee4(dispatch, getState) {\n    var username, dogTag, user;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            username = getState().user.username;\n            dogTag = getState().dog.dogTag;\n            _context4.prev = 2;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(db.collection('users').doc(uid).get());\n\n          case 5:\n            user = _context4.sent;\n\n            if (user.data().token) {\n              console.log(\"user token1: \" + user.data().token);\n              fetch(PUSH_ENDPOINT, {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  to: user.data().token,\n                  title: dogTag,\n                  body: text\n                })\n              });\n            }\n\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](2);\n            console.error(_context4.t0);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[2, 9]]);\n  };\n};","map":{"version":3,"sources":["/Users/kharl/pawSpace/actions/index.js"],"names":["uuid","firebase","db","Notifications","Permissions","ImageManipulator","PUSH_ENDPOINT","uploadPhoto","image","type","dispatch","console","log","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","responseType","open","uri","send","blob","storage","ref","child","v4","put","uploadTask","getDownloadURL","downloadURL","error","manipulateAsync","format","compress","resize","allowNotifications","uid","askAsync","NOTIFICATIONS","permission","status","getExpoPushTokenAsync","token","payload","res","JSON","stringify","collection","doc","update","sendNotification","text","getState","username","user","dogTag","dog","get","data","fetch","method","headers","Accept","body","to","title"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\nimport firebase from 'firebase'\nimport db from '../config/firebase'\nimport {Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions'\nimport * as ImageManipulator from 'expo-image-manipulator'\nconst PUSH_ENDPOINT = 'https://exp.host/--/api/v2/push/send'\n\nexport const uploadPhoto = (image) => {\n  if(image.type===\"video\"){\n\n  return async (dispatch) => {\n    console.log(\"inside video\")\n   \n    try {\n      //const resize = await ImageManipulator.manipulateAsync(image.uri, [], { format: 'jpeg', compress: 0.1 })\n      const blob = await new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest()\n        xhr.onload = () => resolve(xhr.response)\n        xhr.responseType = 'blob'\n        xhr.open('GET', image.uri, true)\n        xhr.send(null)\n      });\n      const uploadTask = await firebase.storage().ref().child(uuid.v4()).put(blob)\n     \n      const downloadURL = await uploadTask.ref.getDownloadURL()\n\n      return downloadURL\n    } catch(e) {\n      console.log(\"in upload photo error\")\n      console.error(e)\n    }\n  }\n  }\n  else {\n    return async (dispatch) => {\n      console.log(\"inside image\")\n     \n      try {\n        const resize = await ImageManipulator.manipulateAsync(image.uri, [], { format: 'jpeg', compress: 0.1 })\n        const blob = await new Promise((resolve, reject) => {\n          const xhr = new XMLHttpRequest()\n          xhr.onload = () => resolve(xhr.response)\n          xhr.responseType = 'blob'\n          xhr.open('GET', resize.uri, true)\n          xhr.send(null)\n        });\n        const uploadTask = await firebase.storage().ref().child(uuid.v4()).put(blob)\n       \n        const downloadURL = await uploadTask.ref.getDownloadURL()\n  \n        return downloadURL\n      } catch(e) {\n        console.log(\"in upload photo error\")\n        console.error(e)\n      }\n    }\n  }\n}\n\n\n\nexport const allowNotifications = (uid) => {\n  console.log(\"in allow notifications \")\n  return async ( dispatch) => {\n    console.log(\"in allow notifications \")\n    console.log(\"uid: \"+uid)\n    //const { uid } = getState().user\n    try {\n      console.log(\"in try\")\n      const permission = await Permissions.askAsync(Permissions.NOTIFICATIONS)\n      if (permission.status === 'granted') {\n        console.log(\"permission granted\")\n        const token = await Notifications.getExpoPushTokenAsync()\n        dispatch({ type: 'GET_TOKEN', payload: token })\n        let res = JSON.stringify(token)\n        console.log(\"token \"+token)\n      \n       \n        db.collection('users').doc(uid).update({ token: token })\n        console.log(\"uid\"+ uid)      \n      }\n    } catch(e) {\n      console.error(e)\n    }\n  }\n}\n\nexport const sendNotification = (uid, text) => {\n  return async (dispatch, getState) => {\n    const { username } = getState().user\n    const { dogTag} = getState().dog\n    try {\n     \n      //const dog = await db.collection('dogs').doc(dogId).get()\n    \n      const user = await db.collection('users').doc(uid).get()\n      \n     \n      if(user.data().token){\n        console.log(\"user token1: \"+user.data().token)\n        fetch(PUSH_ENDPOINT, {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            to: user.data().token,\n            title: dogTag,\n            body: text,\n          })\n        })\n      }\n    } catch(e) {\n      console.error(e)\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}