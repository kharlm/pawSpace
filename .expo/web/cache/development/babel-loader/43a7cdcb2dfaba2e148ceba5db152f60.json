{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from 'firebase';\nimport { orderBy, groupBy, values } from 'lodash';\nimport { allowNotifications, sendNotification } from \"./\";\nimport db from \"../config/firebase\";\nimport uuid from 'uuid';\nimport * as Permissions from 'expo-permissions';\nimport * as Location from 'expo-location';\nimport Geohash from 'latlon-geohash';\nimport { getPosts } from \"../actions/post\";\nexport var updateDogname = function updateDogname(dogname) {\n  return {\n    type: 'UPDATE_DOGNAME',\n    payload: dogname\n  };\n};\nexport var postPage = function postPage(input) {\n  return {\n    type: 'POST_PAGE',\n    payload: input\n  };\n};\nexport var updateBreed = function updateBreed(breed) {\n  return {\n    type: 'UPDATE_BREED',\n    payload: breed\n  };\n};\nexport var updateAge = function updateAge(age) {\n  return {\n    type: 'UPDATE_AGE',\n    payload: age\n  };\n};\nexport var updateColor = function updateColor(color) {\n  return {\n    type: 'UPDATE_COLOR',\n    payload: color\n  };\n};\nexport var updateGender = function updateGender(gender) {\n  return {\n    type: 'UPDATE_GENDER',\n    payload: gender\n  };\n};\nexport var updateWeight = function updateWeight(weight) {\n  return {\n    type: 'UPDATE_WEIGHT',\n    payload: weight\n  };\n};\nexport var updateDogtag = function updateDogtag(dogTag) {\n  return {\n    type: 'UPDATE_DOGTAG',\n    payload: dogTag.replace(/\\s/g, '')\n  };\n};\nexport var updateBio = function updateBio(bio) {\n  return {\n    type: 'UPDATE_BIO',\n    payload: bio\n  };\n};\nexport var updatePhoto = function updatePhoto(photo) {\n  return {\n    type: 'UPDATE_PHOTO',\n    payload: photo\n  };\n};\nexport var getLocation = function getLocation(dog) {\n  console.log(\"in get location\");\n  return function _callee(dispatch, getState) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Permissions.askAsync(Permissions.LOCATION).then(function (result) {\n              if (result) {\n                Location.getCurrentPositionAsync({}).then(function (location) {\n                  var geocode = Geohash.encode(location.coords.latitude, location.coords.longitude, 3);\n\n                  try {\n                    var id = uuid.v4();\n                    db.collection('dogs').doc(dog.dogId).update({\n                      geocode: geocode\n                    });\n                  } catch (e) {\n                    alert(e);\n                  }\n\n                  dispatch({\n                    type: 'GET_LOCATION',\n                    payload: geocode\n                  });\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n};\nexport var dogsignup = function dogsignup() {\n  return function _callee2(dispatch, getState) {\n    var uid, id, _getState$dog, dogname, breed, color, age, gender, weight, dogTag, bio, photo, dog;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            uid = getState().user.uid;\n\n            try {\n              id = uuid.v4();\n              db.collection('users').doc(uid).update({\n                dogs: firebase.firestore.FieldValue.arrayUnion(id)\n              });\n              _getState$dog = getState().dog, dogname = _getState$dog.dogname, breed = _getState$dog.breed, color = _getState$dog.color, age = _getState$dog.age, gender = _getState$dog.gender, weight = _getState$dog.weight, dogTag = _getState$dog.dogTag, bio = _getState$dog.bio, photo = _getState$dog.photo;\n\n              if (id) {\n                dog = {\n                  dogname: dogname,\n                  breed: breed,\n                  age: age,\n                  color: color,\n                  gender: gender,\n                  weight: weight,\n                  dogTag: dogTag,\n                  bio: bio,\n                  dogId: id,\n                  followers: [],\n                  following: [],\n                  photo: photo,\n                  uid: uid,\n                  blocked: [],\n                  geocode: ''\n                };\n                db.collection('dogs').doc(id).set(dog);\n                dispatch({\n                  type: 'DOGLOGIN',\n                  payload: dog\n                });\n              }\n            } catch (e) {\n              alert(e);\n            }\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n};\nexport var doglogin = function doglogin() {\n  console.log(\"INSIDE DOG LOGIN\");\n  return function _callee3(dispatch, getState) {\n    var dogId, uid, dogQuery, dog;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            dogId = getState().dog.dogId;\n            uid = getState().user.uid;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(db.collection('dogs').doc(dogId).get());\n\n          case 5:\n            dogQuery = _context3.sent;\n            dog = dogQuery.data();\n            dispatch(getDog(dog.dogId));\n            _context3.next = 13;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            alert(_context3.t0);\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 10]]);\n  };\n};\nexport var getDog = function getDog(dogId, type) {\n  return function _callee4(dispatch, getState) {\n    var dogQuery, dog, posts, postsQuery;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(db.collection('dogs').doc(dogId).get());\n\n          case 3:\n            dogQuery = _context4.sent;\n            dog = dogQuery.data();\n            posts = [];\n            _context4.next = 8;\n            return _regeneratorRuntime.awrap(db.collection('posts').where('dogId', '==', dogId).get());\n\n          case 8:\n            postsQuery = _context4.sent;\n            postsQuery.forEach(function (response) {\n              posts.push(response.data());\n            });\n            dog.posts = orderBy(posts, 'date', 'desc');\n\n            if (type === 'DOGLOGIN') {\n              dispatch({\n                type: 'DOGLOGIN',\n                payload: dog\n              });\n            } else {\n              dispatch({\n                type: 'GET_DOGPROFILE',\n                payload: dog\n              });\n            }\n\n            _context4.next = 17;\n            break;\n\n          case 14:\n            _context4.prev = 14;\n            _context4.t0 = _context4[\"catch\"](0);\n            alert(_context4.t0);\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 14]]);\n  };\n};\nexport var blockDog = function blockDog(blockedDogId) {\n  console.log(\"in major block method\");\n  return function _callee5(dispatch, getState) {\n    var _getState$dog2, dogId, photo, dogTag;\n\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _getState$dog2 = getState().dog, dogId = _getState$dog2.dogId, photo = _getState$dog2.photo, dogTag = _getState$dog2.dogTag;\n            console.log(\"dogID: \" + dogId);\n            console.log(\"blocked DogId: \" + blockedDogId);\n\n            try {\n              db.collection('dogs').doc(dogId).update({\n                blocked: firebase.firestore.FieldValue.arrayUnion(blockedDogId)\n              });\n              dispatch(getPosts());\n              dispatch(getDog(dogId));\n            } catch (e) {\n              console.log(\"block dog error\");\n              alert(e);\n            }\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  };\n};\nexport var updateDog = function updateDog() {\n  return function _callee6(dispatch, getState) {\n    var _getState$dog3, dogname, breed, color, age, gender, weight, dogTag, bio, dogId, photo;\n\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _getState$dog3 = getState().dog, dogname = _getState$dog3.dogname, breed = _getState$dog3.breed, color = _getState$dog3.color, age = _getState$dog3.age, gender = _getState$dog3.gender, weight = _getState$dog3.weight, dogTag = _getState$dog3.dogTag, bio = _getState$dog3.bio, dogId = _getState$dog3.dogId, photo = _getState$dog3.photo;\n\n            try {\n              db.collection('dogs').doc(dogId).update({\n                name: dogname,\n                breed: breed,\n                color: color,\n                age: age,\n                gender: gender,\n                weight: weight,\n                dogTag: dogTag,\n                bio: bio,\n                dogId: dogId,\n                followers: [],\n                following: [],\n                photo: photo\n              });\n            } catch (e) {\n              console.log(\"inside update dog error\");\n              alert(e);\n            }\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    });\n  };\n};\nexport var getDogs = function getDogs(dog) {\n  return function _callee7(dispatch, getState) {\n    var dogs, uniqueDogs, dogQuery, dog1, snapshot, query, fullSnapshot, items, allItems, swipes, ind, i, k, _i;\n\n    return _regeneratorRuntime.async(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            dogs = [];\n            uniqueDogs = [];\n            _context7.prev = 2;\n            _context7.next = 5;\n            return _regeneratorRuntime.awrap(db.collection('dogs').doc(dog.dogId).get());\n\n          case 5:\n            dogQuery = _context7.sent;\n            dog1 = dogQuery.data();\n            console.log(\"dog1 geocde: \" + dog1.geocode);\n            _context7.next = 10;\n            return _regeneratorRuntime.awrap(db.collection('dogs').where('geocode', '==', dog1.geocode).get());\n\n          case 10:\n            snapshot = _context7.sent;\n            _context7.next = 13;\n            return _regeneratorRuntime.awrap(db.collection('dogs').where('dogId', '==', dog.dogId).get());\n\n          case 13:\n            query = _context7.sent;\n            _context7.next = 16;\n            return _regeneratorRuntime.awrap(db.collection('dogs').get());\n\n          case 16:\n            fullSnapshot = _context7.sent;\n            items = [];\n            allItems = [];\n            swipes = [];\n            query.forEach(function (response) {\n              dogs.push(response.data());\n            });\n            allItems = fullSnapshot.docs.map(function (doc) {\n              return doc.data();\n            });\n            items = snapshot.docs.map(function (doc) {\n              return doc.data();\n            });\n            swipes = dogs[0].swipes;\n\n            for (i = 0; i < items.length; i++) {\n              if (items[i].dogId === dog.dogId) {\n                items.splice(i, 1);\n              }\n            }\n\n            if (typeof swipes != 'undefined') {\n              for (k = 0; k < swipes.length; k++) {\n                for (_i = 0; _i < items.length; _i++) {\n                  if (items[_i].dogId === Object.keys(swipes[k])[0]) {\n                    items.splice(_i, 1);\n                  }\n                }\n              }\n            }\n\n            console.log(\"length: \" + items.length);\n            dispatch({\n              type: 'GET_CARDS',\n              payload: items\n            });\n            _context7.next = 33;\n            break;\n\n          case 30:\n            _context7.prev = 30;\n            _context7.t0 = _context7[\"catch\"](2);\n            alert(_context7.t0);\n\n          case 33:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[2, 30]]);\n  };\n};","map":{"version":3,"sources":["/Users/kharl/pawSpace/actions/dog.js"],"names":["firebase","orderBy","groupBy","values","allowNotifications","sendNotification","db","uuid","Permissions","Location","Geohash","getPosts","updateDogname","dogname","type","payload","postPage","input","updateBreed","breed","updateAge","age","updateColor","color","updateGender","gender","updateWeight","weight","updateDogtag","dogTag","replace","updateBio","bio","updatePhoto","photo","getLocation","dog","console","log","dispatch","getState","askAsync","LOCATION","then","result","getCurrentPositionAsync","location","geocode","encode","coords","latitude","longitude","id","v4","collection","doc","dogId","update","e","alert","dogsignup","uid","user","dogs","firestore","FieldValue","arrayUnion","followers","following","blocked","set","doglogin","get","dogQuery","data","getDog","posts","where","postsQuery","forEach","response","push","blockDog","blockedDogId","updateDog","name","getDogs","uniqueDogs","dog1","snapshot","query","fullSnapshot","items","allItems","swipes","docs","map","i","length","splice","k","Object","keys"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport { orderBy, groupBy, values } from 'lodash'\nimport { allowNotifications, sendNotification } from './'\nimport db from '../config/firebase';\nimport uuid from 'uuid'\nimport * as Permissions from 'expo-permissions'\nimport * as Location from 'expo-location'\nimport Geohash from 'latlon-geohash';\nimport {getPosts} from '../actions/post'\n\n\nexport const updateDogname = (dogname) => {\n\treturn {type: 'UPDATE_DOGNAME', payload: dogname}\n}\n\nexport const postPage = (input) => {\n\treturn {type: 'POST_PAGE', payload: input}\n}\n\nexport const updateBreed = (breed) => {\n\treturn {type: 'UPDATE_BREED', payload: breed}\n}\n\nexport const updateAge = (age) => {\n\treturn {type: 'UPDATE_AGE', payload: age}\n}\n\nexport const updateColor = (color) => {\n\treturn {type: 'UPDATE_COLOR', payload: color}\n}\n\nexport const updateGender = (gender) => {\n\treturn {type: 'UPDATE_GENDER', payload: gender}\n}\n\nexport const updateWeight = (weight) => {\n    return {type: 'UPDATE_WEIGHT', payload: weight}\n    \n}\n\nexport const updateDogtag = (dogTag) => {\n    return {type: 'UPDATE_DOGTAG', payload: dogTag.replace(/\\s/g, '')}\n    \n}\n\nexport const updateBio = (bio) => {\n    return {type: 'UPDATE_BIO', payload: bio}\n    \n}\nexport const updatePhoto = (photo) => {\n\treturn {type: 'UPDATE_PHOTO', payload: photo}\n}\n\nexport const getLocation = (dog) => {\n\tconsole.log(\"in get location\")\n\treturn async(dispatch,getState) => {\n\t\tPermissions.askAsync(Permissions.LOCATION).then(function(result){\n\t\t  if(result){\n\t\t    Location.getCurrentPositionAsync({}).then(function(location){\n\t\t\t  var geocode = Geohash.encode(location.coords.latitude, location.coords.longitude, 3)\n\t\t\t  \n\t\t\t  \n\t\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tconst id = uuid.v4()\t\n\t\t\t\t\tdb.collection('dogs').doc(dog.dogId).update({\n\t\t\t\t\t\tgeocode: geocode\n\t\t\t\t\t})\n\t\t\t\t}catch (e) {\n\n\t\t\t\t\talert(e)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t  dispatch({ type: 'GET_LOCATION', payload: geocode });\n\t\t\t  \n\t\t    })\n\t\t  }\n\t\t})\n\t}\n}\n\n\n\nexport const dogsignup = () => {\n\treturn async (dispatch, getState) => {\n\t\tconst { uid} = getState().user\n\t\t\t\n\t\ttry {\n\t\t\tconst id = uuid.v4()\t\n\t\t\tdb.collection('users').doc(uid).update({\n\t\t\t\tdogs: firebase.firestore.FieldValue.arrayUnion(id)\n\t\t\t})\n\t\t\t\n\n\t\t\t/*const {dogname,breed,age,gender,weight,dogtag,story } = getState().dog\n\t\t\tconst response = await firebase.auth().createUserWithEmailAndPassword(email, password)\n\t\t\tif(response.user.uid) {\n\t\t\tconst { email, password, username, bio } = getState().user\n\t\t\tconst response = await firebase.auth().createUserWithEmailAndPassword(email, password)\n\t\t\t*/\n\t\t\n\t\t\tconst {dogname,breed,color,age,gender,weight,dogTag,bio,photo} = getState().dog\n\t\t\n\t\t\tif(id){\n\t\t\t\tconst dog = {\n\t\t\t\t\tdogname: dogname,\n\t\t\t\t\tbreed: breed,\n\t\t\t\t\tage: age,\n\t\t\t\t\tcolor: color,\n\t\t\t\t\tgender: gender,\n\t\t\t\t\tweight: weight,\n\t\t\t\t\tdogTag: dogTag,\n\t\t\t\t\tbio: bio,\n\t\t\t\t\tdogId: id,\n\t\t\t\t\tfollowers: [],\n\t\t\t\t\tfollowing: [],\n\t\t\t\t\tphoto: photo,\n\t\t\t\t\tuid: uid,\n\t\t\t\t\tblocked: [],\n\t\t\t\t\tgeocode:''\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tdb.collection('dogs').doc(id).set(dog)\n\t\t\t\t//db.collection('users').doc(response.user.uid).set(user)\n\t\t\t\tdispatch({type: 'DOGLOGIN', payload: dog})\n\t\t\t\t\n\t\t}\n\n\t\t\t\n\t\t} catch (e) {\n\t\t\talert(e)\n\t\t}\n\t\t\n\t}//t\n\t}\n\n\texport const doglogin = () => {\n\t\tconsole.log(\"INSIDE DOG LOGIN\")\n\t\t\n\t\treturn async (dispatch, getState) => {\n\t\t\ttry {\n\t\t\t\tconst { dogId} = getState().dog\n\t\t\t\tconst{uid} = getState().user\n\t\t\t\tconst dogQuery = await db.collection('dogs').doc(dogId).get()\n\t\t\t\tlet dog = dogQuery.data()\n\t\n\t\t\t\tdispatch(getDog(dog.dogId))\n\t\t\t\t\n\t\t\t} catch (e) {\n\n\t\t\t\talert(e)\n\t\t\t}\n\t\t}\n\t}\n\t\n\n\texport const getDog = (dogId, type) => {\n\t\treturn async (dispatch, getState) => {\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tconst dogQuery = await db.collection('dogs').doc(dogId).get()\n\t\t\t\tlet dog = dogQuery.data()\n\t\t\t\t    \n      \n\t\t\t\t//dispatch(allowNotifications(dog.uid))\n\t\n\t\t let posts = []\n\t\t  const postsQuery = await db.collection('posts').where('dogId', '==', dogId).get()\n\t\t  postsQuery.forEach(function(response) {\n\t\t\tposts.push(response.data())\n\t\t  })\n\t\t  \n\t\t dog.posts = orderBy(posts, 'date','desc')\n\t\t\n\t\n\t\t\t\tif(type === 'DOGLOGIN'){\n\t\t\t\t\n\t\t\t\t\tdispatch({type: 'DOGLOGIN', payload: dog })\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tdispatch({type: 'GET_DOGPROFILE', payload: dog })\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch (e) {\n\t\t\t\talert(e)\n\t\t\t}\n\t\t}\n\t}\n\n\texport const blockDog = (blockedDogId) => {\n\t\tconsole.log(\"in major block method\")\n\t\t\n\t\treturn async (dispatch,getState)  => {\n\t\t\tconst { dogId, photo, dogTag} = getState().dog\n\t\t\tconsole.log(\"dogID: \"+dogId)\n\t\t\tconsole.log(\"blocked DogId: \"+blockedDogId)\n\t\t\ttry {\n\t\t\t\tdb.collection('dogs').doc(dogId).update({\n\t\t\t\t\tblocked: firebase.firestore.FieldValue.arrayUnion(blockedDogId)\n\t\t\t\t})\n\t\t\t\tdispatch(getPosts())\n\t\t\t\tdispatch(getDog(dogId))\n\t\t\t} \n\t\t\tcatch(e) {\n\t\t\t  console.log(\"block dog error\")\n\t\t\talert(e)\n\t\t\t}\n\t\t  }\n\t\t  \n\n\t}\n\texport const updateDog = () => {\n\t\treturn async ( dispatch, getState )  => {\n\t\t  const {dogname,breed,color,age,gender,weight,dogTag,bio,dogId,photo } = getState().dog\n\t\t  try {\n\t\t\t\t//const {dog} = getState()\n\t\t\tdb.collection('dogs').doc(dogId).update({\n\t\t\t\tname: dogname,\n\t\t\t\tbreed: breed,\n\t\t\t\tcolor: color,\n\t\t\t\tage: age,\n\t\t\t\tgender: gender,\n\t\t\t\tweight: weight,\n\t\t\t\tdogTag: dogTag,\n\t\t\t\tbio: bio,\n\t\t\t\tdogId: dogId,\n\t\t\t\tfollowers: [],\n\t\t\t\tfollowing: [],\n\t\t\t\tphoto: photo\n\t\t\t\t\n\t\t\t})\n\t\t  } catch(e) {\n\t\t\t\tconsole.log(\"inside update dog error\")\n\t\t\talert(e)\n\t\t  }\n\t\t}\n\t  }\n\n\t  export const getDogs = (dog) => {\n\t\t  \n\t\treturn async (dispatch, getState) => {\n\t\t\tlet dogs = []\n\t\t\tlet uniqueDogs = []\n\t\t\ttry {\n\t\t\t\tconst dogQuery = await db.collection('dogs').doc(dog.dogId).get()\n\t\t\t\t  let dog1 = dogQuery.data()\n\t\t\t\t  console.log(\"dog1 geocde: \"+dog1.geocode)\n\t\t\t\tconst snapshot = await db.collection('dogs').where('geocode', '==', dog1.geocode).get()\n\t\t\t\tconst query = await db.collection('dogs').where('dogId', '==', dog.dogId).get()\n\t\t\t\tconst fullSnapshot = await db.collection('dogs').get()\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tlet items = []\n\t\t\t\tlet allItems= []\n\t\t\t\tlet swipes = []\n\n\t\t\t\tlet ind;\n\n\t\t\t\tquery.forEach(function(response) {\n\t\t\t\t\tdogs.push(response.data())\n\t\t\t\t\t})\n\n\t\t\t\tallItems = fullSnapshot.docs.map(doc => doc.data());\n\t\t\t\titems = snapshot.docs.map(doc => doc.data());\n\n\t\t\t\tswipes = dogs[0].swipes\n\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t// Removes the users profile from a list of cards that returned\n\t\t\t\tfor(let i=0; i<items.length; i++){\n\t\t\t\t\tif(items[i].dogId===dog.dogId){\n\t\t\t\t\t\titems.splice(i,1)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\tif (typeof swipes != 'undefined'){\n\t\t\t\t\n\t\t\t  \n\t\t\t for(let k=0;k<swipes.length;k++){\n\t\t\t\t \n\t\t\t\t\n\t\t\t\tfor(let i=0; i<items.length; i++){\n\t\t\t\t\t\n\t\t\t\t\tif(items[i].dogId===Object.keys(swipes[k])[0]){\n\t\t\t\t\t\titems.splice(i,1)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t }\n\t\t\t}\n\t\t\t\n\t\t\tconsole.log(\"length: \"+items.length)\n\t\t\t\t\n\t\t\t\tdispatch({ type: 'GET_CARDS', payload: items });\n\t\n    \t\t//console.log(snapshot.docs.map(\n\t\t\t\t//doc => doc.data()))\n\t\t\t} catch (e) {\n\t\t\t\talert(e)\n\t\t\t}\n\t\t}\n\t}\n\t  "]},"metadata":{},"sourceType":"module"}