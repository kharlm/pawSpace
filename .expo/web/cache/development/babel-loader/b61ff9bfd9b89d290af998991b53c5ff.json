{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default {\n  get name() {\n    return 'ExpoVideoThumbnails';\n  },\n\n  getThumbnailAsync: function getThumbnailAsync(sourceFilename) {\n    var options,\n        _args = arguments;\n    return _regeneratorRuntime.async(function getThumbnailAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            throw new Error('ExpoVideoThumbnails not supported on Expo Web');\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n};","map":{"version":3,"sources":["../src/ExpoVideoThumbnails.web.ts"],"names":[],"mappings":";AAEA,eAAe;AACb,MAAI,IAAJ,GAAQ;AACN,WAAO,qBAAP;AACD,GAHY;;AAIP,EAAA,iBAJO,6BAKX,cALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMX,YAAA,OANW,2DAMiB,EANjB;AAAA,kBAQL,IAAI,KAAJ,CAAU,+CAAV,CARK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import { ThumbnailOptions, VideoThumbnailsResult } from './VideoThumbnailsTypes.types';\n\nexport default {\n  get name(): string {\n    return 'ExpoVideoThumbnails';\n  },\n  async getThumbnailAsync(\n    sourceFilename: string,\n    options: ThumbnailOptions = {}\n  ): Promise<VideoThumbnailsResult> {\n    throw new Error('ExpoVideoThumbnails not supported on Expo Web');\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}