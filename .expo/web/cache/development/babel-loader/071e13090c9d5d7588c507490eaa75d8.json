{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/kharl/pawSpace/screens/CategoryScreens/WeightCategory.js\";\nimport React from 'react';\nimport styles from \"../../styles.js\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport db from \"../../config/firebase\";\nimport { getDog } from \"../../actions/dog\";\nimport DogInfo from \"../DogInfo\";\nimport Category from \"../Category\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar WeightCategory = function (_React$Component) {\n  _inherits(WeightCategory, _React$Component);\n\n  function WeightCategory() {\n    _classCallCheck(this, WeightCategory);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WeightCategory).apply(this, arguments));\n  }\n\n  _createClass(WeightCategory, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"700\",\n          fontSize: 18,\n          paddingTop: 5,\n          paddingHorizontal: width / 4 + 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        }\n      }, \"View Dogs By Weight\"), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          padding: 10,\n          marginTop: 5,\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('WeightPosts', {\n            firstWeight: '0',\n            secondWeight: '22'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }, React.createElement(Category, {\n        width: width,\n        height: height,\n        info: \"Small Dogs - 0 to 22 pounds\",\n        infoImage: require(\"../../assets/smalldog.jpeg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('WeightPosts', {\n            firstWeight: '23',\n            secondWeight: '57'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        }\n      }, React.createElement(Category, {\n        width: width,\n        height: height,\n        info: \"Medium Dogs - 23 to 57 pounds\",\n        infoImage: require(\"../../assets/mediumdog.jpeg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('WeightPosts', {\n            firstWeight: '58',\n            secondWeight: '99'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        }\n      }, React.createElement(Category, {\n        width: width,\n        height: height,\n        info: \"Large Dogs - 58 to 99 pounds\",\n        infoImage: require(\"../../assets/largedog.jpeg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('WeightPosts', {\n            firstWeight: '99',\n            secondWeight: '1000'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }, React.createElement(Category, {\n        width: width,\n        height: height,\n        info: \"Extra Large Dogs - 100 or more pounds\",\n        infoImage: require(\"../../assets/extralarge.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      }))));\n    }\n  }]);\n\n  return WeightCategory;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getDog: getDog\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    dog: state.dog\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightCategory);","map":{"version":3,"sources":["/Users/kharl/pawSpace/screens/CategoryScreens/WeightCategory.js"],"names":["React","styles","connect","bindActionCreators","db","getDog","DogInfo","Category","Dimensions","get","width","height","WeightCategory","fontWeight","fontSize","paddingTop","paddingHorizontal","flexDirection","padding","marginTop","flexWrap","justifyContent","props","navigation","navigate","firstWeight","secondWeight","require","Component","mapDispatchToProps","dispatch","mapStateToProps","state","user","dog"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from '../../styles.js'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { View, Text, SafeAreaView, TextInput, FlatList, Image, TouchableOpacity,Dimensions } from 'react-native';\nimport db from '../../config/firebase';\nimport { getDog } from '../../actions/dog'\nimport DogInfo from '../DogInfo';\nimport Category from '../Category';\nimport { ScrollView } from 'react-native';\nconst  { width,height } = Dimensions.get('window');\n\nclass WeightCategory extends React.Component {\n    render() {\n        return (\n    \n                <ScrollView>\n            <Text style={{fontWeight:\"700\",fontSize: 18,paddingTop: 5,paddingHorizontal: (width/4) + 5 }}>View Dogs By Weight</Text>\n            <View\n                     style={{\n                      flexDirection: \"row\",\n                      padding: 10,\n                      marginTop: 5,\n                      flexWrap: \"wrap\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n             <TouchableOpacity onPress={() => this.props.navigation.navigate('WeightPosts', {firstWeight: '0' ,secondWeight: '22'})}>\n             <Category\n                width={width}\n                height={height}\n                info='Small Dogs - 0 to 22 pounds'\n                infoImage ={require('../../assets/smalldog.jpeg')}\n              />\n              </TouchableOpacity>\n    \n              <TouchableOpacity onPress={() => this.props.navigation.navigate('WeightPosts', {firstWeight: '23' ,secondWeight: '57'})}>\n                <Category\n                width={width}\n                height={height}\n                info ='Medium Dogs - 23 to 57 pounds'\n                infoImage={require('../../assets/mediumdog.jpeg')}\n              />\n              </TouchableOpacity>\n    \n               <TouchableOpacity onPress={() => this.props.navigation.navigate('WeightPosts', {firstWeight: '58' ,secondWeight: '99'})}>\n                \n                <Category\n                width={width}\n                height={height}\n                info ='Large Dogs - 58 to 99 pounds'\n                infoImage={require('../../assets/largedog.jpeg')}\n              />\n              </TouchableOpacity>\n    \n              <TouchableOpacity onPress={() => this.props.navigation.navigate('WeightPosts', {firstWeight: '99' ,secondWeight: '1000'})}>\n                <Category\n                width={width}\n                height={height}\n                info ='Extra Large Dogs - 100 or more pounds'\n                infoImage={require('../../assets/extralarge.jpg')}\n              />\n             </TouchableOpacity>\n              </View>\n              </ScrollView>\n        )\n                }\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ getDog }, dispatch)\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    dog: state.dog\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightCategory)"]},"metadata":{},"sourceType":"module"}