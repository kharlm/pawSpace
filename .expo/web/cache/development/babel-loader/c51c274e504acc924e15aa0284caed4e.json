{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport { combineReducers } from 'redux';\n\nvar user = function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOGIN':\n      return action.payload;\n\n    case 'UPDATE_EMAIL':\n      return _objectSpread({}, state, {\n        email: action.payload\n      });\n\n    case 'UPDATE_PASSWORD':\n      return _objectSpread({}, state, {\n        password: action.payload\n      });\n\n    case 'UPDATE_USERNAME':\n      return _objectSpread({}, state, {\n        username: action.payload\n      });\n\n    case 'UPDATE_PHOTO':\n      return _objectSpread({}, state, {\n        photo: action.payload\n      });\n\n    case 'GET_TOKEN':\n      return _objectSpread({}, state, {\n        token: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar signupError = function signupError() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SIGNUP_ERROR':\n      return state = true;\n\n    case 'NOSIGNUP_ERROR':\n      return state = false;\n\n    default:\n      return state;\n  }\n};\n\nvar dog = function dog() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DOGLOGIN':\n      return action.payload;\n\n    case 'POST_PAGE':\n      return _objectSpread({}, state, {\n        postPage: action.payload\n      });\n\n    case 'UPDATE_DOGNAME':\n      return _objectSpread({}, state, {\n        dogname: action.payload\n      });\n\n    case 'UPDATE_BREED':\n      return _objectSpread({}, state, {\n        breed: action.payload\n      });\n\n    case 'UPDATE_COLOR':\n      return _objectSpread({}, state, {\n        color: action.payload\n      });\n\n    case 'UPDATE_AGE':\n      return _objectSpread({}, state, {\n        age: action.payload\n      });\n\n    case 'UPDATE_GENDER':\n      return _objectSpread({}, state, {\n        gender: action.payload\n      });\n\n    case 'UPDATE_WEIGHT':\n      return _objectSpread({}, state, {\n        weight: action.payload\n      });\n\n    case 'UPDATE_DOGTAG':\n      return _objectSpread({}, state, {\n        dogTag: action.payload\n      });\n\n    case 'UPDATE_BIO':\n      return _objectSpread({}, state, {\n        bio: action.payload\n      });\n\n    case 'UPDATE_PHOTO':\n      return _objectSpread({}, state, {\n        photo: action.payload\n      });\n\n    case 'GET_LOCATION':\n      return _objectSpread({}, state, {\n        geocode: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar profile = function profile() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_PROFILE':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar dogprofile = function dogprofile() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_DOGPROFILE':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar cards = function cards() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_CARDS':\n      return _objectSpread({}, state, {\n        cards: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar messages = function messages() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_MESSAGES':\n      console.log(\"IN GET MESSAGES\");\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar post = function post() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPDATE_PHOTO':\n      return _objectSpread({}, state, {\n        photo: action.payload\n      });\n\n    case 'UPDATE_DESCRIPTION':\n      return _objectSpread({}, state, {\n        description: action.payload\n      });\n\n    case 'UPDATE_LOCATION':\n      return _objectSpread({}, state, {\n        location: action.payload\n      });\n\n    case 'GET_POSTS':\n      return _objectSpread({}, state, {\n        feed: action.payload\n      });\n\n    case 'GET_POST':\n      return _objectSpread({}, state, {\n        postFeed: action.payload\n      });\n\n    case 'GET_DOGPOSTS':\n      return _objectSpread({}, state, {\n        breedFeed: action.payload\n      });\n\n    case 'GET_EXPLOREPOSTS':\n      return _objectSpread({}, state, {\n        exploreFeed: action.payload\n      });\n\n    case 'GET_COMMENTS':\n      return _objectSpread({}, state, {\n        comments: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar modal = function modal() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'OPEN_MODAL':\n      return _objectSpread({}, state, {\n        modal: action.payload\n      });\n\n    case 'CLOSE_MODAL':\n      return _objectSpread({}, state, {\n        modal: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  dog: dog,\n  user: user,\n  post: post,\n  modal: modal,\n  profile: profile,\n  messages: messages,\n  dogprofile: dogprofile,\n  signupError: signupError,\n  cards: cards\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/kharl/pawSpace/reducers/index.js"],"names":["combineReducers","user","state","action","type","payload","email","password","username","photo","token","signupError","dog","postPage","dogname","breed","color","age","gender","weight","dogTag","bio","geocode","profile","dogprofile","cards","messages","console","log","post","description","location","feed","postFeed","breedFeed","exploreFeed","comments","modal","rootReducer"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux'\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.payload\n    case 'UPDATE_EMAIL':\n      return { ...state, email: action.payload }\n    case 'UPDATE_PASSWORD':\n      return { ...state, password: action.payload }\n    case 'UPDATE_USERNAME':\n      return { ...state, username: action.payload }\n    case 'UPDATE_PHOTO':\n      return { ...state, photo: action.payload }\n    case 'GET_TOKEN': \n      return { ...state, token: action.payload }\n    default:\n      return state\n  }\n}\n\n\n\n\nconst signupError = ( state = false, action) => {\n  switch(action.type) {\n    case 'SIGNUP_ERROR':\n      return state = true\n    case 'NOSIGNUP_ERROR':\n        return state = false\n    default:\n      return state;\n  }\n}\n\nconst dog = (state = {}, action) => {\n  switch (action.type) {\n    case 'DOGLOGIN':\n      return action.payload\n      case 'POST_PAGE':\n        return { ...state, postPage: action.payload }\n    case 'UPDATE_DOGNAME':\n      return { ...state, dogname: action.payload } \n    case 'UPDATE_BREED':\n      return { ...state, breed: action.payload } \n    case 'UPDATE_COLOR':\n      return { ...state, color: action.payload } \n    case 'UPDATE_AGE':\n      return { ...state, age: action.payload } \n    case 'UPDATE_GENDER':\n      return { ...state, gender: action.payload } \n    case 'UPDATE_WEIGHT':\n      return { ...state, weight: action.payload } \n    case 'UPDATE_DOGTAG':\n      return { ...state, dogTag: action.payload } \n    case 'UPDATE_BIO':\n      return { ...state, bio: action.payload } \n    case 'UPDATE_PHOTO':\n      return { ...state, photo: action.payload }\n    case 'GET_LOCATION':\n    return { ...state, geocode: action.payload }\n    default:\n      return state\n  }\n}\n\n\n\n\nconst profile = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_PROFILE':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst dogprofile = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_DOGPROFILE':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst cards = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_CARDS':      \n    return { ...state, cards: action.payload}\n    default:\n      return state\n  }\n}\n\n\nconst messages = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_MESSAGES':\n      console.log(\"IN GET MESSAGES\")\n      return action.payload\n    default:\n      return state\n  }\n}\n/*const postPage = (state = 'false', action) => {\n  switch (action.type) {\n    case 'POST_PAGE':\n      return { ...state, postPage: action.payload }\n    default:\n      return state\n  }\n}*/\n\nconst post = (state = null, action) => {\n  switch (action.type) {\n    case 'UPDATE_PHOTO':\n      return { ...state, photo: action.payload }\n    case 'UPDATE_DESCRIPTION':\n      return { ...state, description: action.payload }\n    case 'UPDATE_LOCATION':\n      return { ...state, location: action.payload }\n    case 'GET_POSTS':\n      return { ...state, feed: action.payload }\n    case 'GET_POST':\n      return { ...state, postFeed: action.payload }\n    case 'GET_DOGPOSTS':\n      return { ...state, breedFeed: action.payload }\n    case 'GET_EXPLOREPOSTS':\n        return { ...state, exploreFeed: action.payload }\n    case 'GET_COMMENTS': \n      return { ...state, comments: action.payload }\n    default:\n      return state\n  }\n}\n\nconst modal = (state = null, action) => {\n  switch (action.type) {\n    case 'OPEN_MODAL':\n      return { ...state, modal: action.payload }\n    case 'CLOSE_MODAL':\n      return { ...state, modal: false }\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  dog,\n\tuser,\n  post,\n  modal,\n  profile,\n  messages,\n  dogprofile,\n  signupError,cards,\n})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}