{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from 'firebase';\nimport { orderBy, groupBy, values } from 'lodash';\nimport { allowNotifications, sendNotification } from \"./\";\nimport db from \"../config/firebase\";\nimport { getDog } from \"../actions/dog\";\nexport var updateEmail = function updateEmail(email) {\n  return {\n    type: 'UPDATE_EMAIL',\n    payload: email\n  };\n};\nexport var updatePassword = function updatePassword(password) {\n  return {\n    type: 'UPDATE_PASSWORD',\n    payload: password\n  };\n};\nexport var updateUsername = function updateUsername(username) {\n  return {\n    type: 'UPDATE_USERNAME',\n    payload: username\n  };\n};\nexport var updatePhoto = function updatePhoto(photo) {\n  return {\n    type: 'UPDATE_PHOTO',\n    payload: photo\n  };\n};\nexport var signupError = function signupError() {\n  return {\n    type: 'SIGNUP_ERROR'\n  };\n};\nexport var login = function login() {\n  return function _callee(dispatch, getState) {\n    var _getState$user, email, password, response;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _getState$user = getState().user, email = _getState$user.email, password = _getState$user.password;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n          case 4:\n            response = _context.sent;\n            console.log(\"user id: \" + response.user.uid);\n            dispatch(getUser(response.user.uid));\n            console.log(\"in log before dispatch allow notifications\");\n            dispatch(allowNotifications(response.user.uid));\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]]);\n  };\n};\nexport var facebookLogin = function facebookLogin() {\n  return function _callee2(dispatch) {\n    var _await$Expo$Facebook$, type, token, credential, response, user, _user;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Expo.Facebook.logInWithReadPermissionsAsync('536462030493600'));\n\n          case 3:\n            _await$Expo$Facebook$ = _context2.sent;\n            type = _await$Expo$Facebook$.type;\n            token = _await$Expo$Facebook$.token;\n\n            if (!(type === 'success')) {\n              _context2.next = 17;\n              break;\n            }\n\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(firebase.auth.FacebookAuthProvider.credential(token));\n\n          case 9:\n            credential = _context2.sent;\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithCredential(credential));\n\n          case 12:\n            response = _context2.sent;\n            _context2.next = 15;\n            return _regeneratorRuntime.awrap(db.collection('users').doc(response.uid).get());\n\n          case 15:\n            user = _context2.sent;\n\n            if (!user.exists) {\n              _user = {\n                uid: response.uid,\n                email: response.email,\n                username: response.displayName,\n                photo: response.photoURL,\n                token: null,\n                followers: [],\n                following: []\n              };\n              db.collection('users').doc(response.uid).set(_user);\n              dispatch({\n                type: 'LOGIN',\n                payload: _user\n              });\n            } else {\n              dispatch(getUser(response.uid));\n            }\n\n          case 17:\n            _context2.next = 22;\n            break;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0);\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 19]]);\n  };\n};\nexport var getUser = function getUser(uid, type) {\n  return function _callee3(dispatch, getState) {\n    var userQuery, user, posts, postsQuery;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(db.collection('users').doc(uid).get());\n\n          case 3:\n            userQuery = _context3.sent;\n            user = userQuery.data();\n            posts = [];\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(db.collection('posts').where('uid', '==', uid).get());\n\n          case 8:\n            postsQuery = _context3.sent;\n            postsQuery.forEach(function (response) {\n              posts.push(response.data());\n            });\n            user.posts = orderBy(posts, 'date', 'asc');\n\n            if (type === 'LOGIN') {\n              dispatch({\n                type: 'LOGIN',\n                payload: user\n              });\n              dispatch(getDog(user.dogs[0], 'DOGLOGIN'));\n            } else {\n              dispatch({\n                type: 'GET_PROFILE',\n                payload: user\n              });\n              dispatch(getDog(user.dogs[0], 'GET_DOGPROFILE'));\n            }\n\n            _context3.next = 17;\n            break;\n\n          case 14:\n            _context3.prev = 14;\n            _context3.t0 = _context3[\"catch\"](0);\n            alert(_context3.t0);\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 14]]);\n  };\n};\nexport var updateUser = function updateUser() {\n  return function _callee4(dispatch, getState) {\n    var _getState$user2, uid, photo;\n\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _getState$user2 = getState().user, uid = _getState$user2.uid, photo = _getState$user2.photo;\n\n            try {\n              db.collection('users').doc(uid).update({\n                photo: photo\n              });\n            } catch (e) {\n              console.log(\"in update user\");\n              alert(e);\n            }\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  };\n};\nexport var signup = function signup() {\n  return function _callee5(dispatch, getState) {\n    var _getState$user3, email, password, username, response, user;\n\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _getState$user3 = getState().user, email = _getState$user3.email, password = _getState$user3.password, username = _getState$user3.username;\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password));\n\n          case 4:\n            response = _context5.sent;\n            console.log(\"Setting signupError to false\");\n            dispatch({\n              type: 'NOSIGNUP_ERROR'\n            });\n            global.signupError = false;\n\n            if (response.user.uid) {\n              user = {\n                uid: response.user.uid,\n                email: email,\n                dogs: [],\n                token: null\n              };\n              db.collection('users').doc(response.user.uid).set(user);\n              dispatch({\n                type: 'LOGIN',\n                payload: user\n              });\n              dispatch(allowNotifications(response.user.uid));\n            }\n\n            _context5.next = 16;\n            break;\n\n          case 11:\n            _context5.prev = 11;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.log(\"in sign up error\");\n            dispatch({\n              type: 'SIGNUP_ERROR'\n            });\n            alert(_context5.t0);\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 11]]);\n  };\n};\nexport var followUser = function followUser(dog) {\n  return function _callee6(dispatch, getState) {\n    var _getState$dog, dogId, photo, dogTag;\n\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _getState$dog = getState().dog, dogId = _getState$dog.dogId, photo = _getState$dog.photo, dogTag = _getState$dog.dogTag;\n\n            try {\n              db.collection('dogs').doc(dog.dogId).update({\n                followers: firebase.firestore.FieldValue.arrayUnion(dogId)\n              });\n              db.collection('dogs').doc(dogId).update({\n                following: firebase.firestore.FieldValue.arrayUnion(dog.dogId)\n              });\n              db.collection('activity').doc().set({\n                followerId: dogId,\n                followerPhoto: photo,\n                followerName: dogTag,\n                dogId: dog.dogId,\n                photo: dog.photo,\n                dogTag: dog.dogTag,\n                date: new Date().getTime(),\n                type: 'FOLLOWER'\n              });\n              dispatch(sendNotification(dog.dogId, 'Started Following You'));\n              dispatch(getDog(dog.dogId));\n            } catch (e) {\n              console.error(e);\n            }\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    });\n  };\n};\nexport var unfollowUser = function unfollowUser(dog) {\n  return function _callee7(dispatch, getState) {\n    var _getState$dog2, dogId, photo, dogTag;\n\n    return _regeneratorRuntime.async(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _getState$dog2 = getState().dog, dogId = _getState$dog2.dogId, photo = _getState$dog2.photo, dogTag = _getState$dog2.dogTag;\n\n            try {\n              db.collection('dogs').doc(dog.dogId).update({\n                followers: firebase.firestore.FieldValue.arrayRemove(dogId)\n              });\n              db.collection('dogs').doc(dogId).update({\n                following: firebase.firestore.FieldValue.arrayRemove(dog.dogId)\n              });\n              dispatch(getDog(dog.dogId));\n            } catch (e) {\n              console.error(e);\n            }\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/kharl/pawSpace/actions/user.js"],"names":["firebase","orderBy","groupBy","values","allowNotifications","sendNotification","db","getDog","updateEmail","email","type","payload","updatePassword","password","updateUsername","username","updatePhoto","photo","signupError","login","dispatch","getState","user","auth","signInWithEmailAndPassword","response","console","log","uid","getUser","alert","facebookLogin","Expo","Facebook","logInWithReadPermissionsAsync","token","FacebookAuthProvider","credential","signInWithCredential","collection","doc","get","exists","displayName","photoURL","followers","following","set","userQuery","data","posts","where","postsQuery","forEach","push","dogs","updateUser","update","e","signup","createUserWithEmailAndPassword","global","followUser","dog","dogId","dogTag","firestore","FieldValue","arrayUnion","followerId","followerPhoto","followerName","date","Date","getTime","error","unfollowUser","arrayRemove"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport { orderBy, groupBy, values } from 'lodash'\nimport { allowNotifications, sendNotification } from './'\nimport db from '../config/firebase';\nimport {getDog} from '../actions/dog'\n\nexport const updateEmail = (email) => {\n\treturn {type: 'UPDATE_EMAIL', payload: email}\n}\n\nexport const updatePassword = (password) => {\n\treturn {type: 'UPDATE_PASSWORD', payload: password}\n}\n\nexport const updateUsername = (username) => {\n\treturn {type: 'UPDATE_USERNAME', payload: username}\n}\n\nexport const updatePhoto = (photo) => {\n\treturn {type: 'UPDATE_PHOTO', payload: photo}\n}\n\nexport const signupError = () => {\n\treturn {type:'SIGNUP_ERROR'}\n}\n\nexport const login = () => {\n\treturn async (dispatch, getState) => {\n\t\ttry {\n\t\t\tconst { email, password } = getState().user\n\t\t\tconst response = await firebase.auth().signInWithEmailAndPassword(email, password)\n\t\t\tconsole.log(\"user id: \"+response.user.uid)\n\t\t\tdispatch(getUser(response.user.uid))\n\t\t\t//const userQuery = await db.collection('users').doc(response.user.uid).get()\n\t\t\t//let user = userQuery.data()\t\n\t\t\tconsole.log(\"in log before dispatch allow notifications\")\n\t\t\tdispatch(allowNotifications(response.user.uid))\n\t\t} catch (e) {\n\t\t\talert(e)\n\t\t}\n\t}\n}\n\nexport const facebookLogin = () => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst { type, token } = await Expo.Facebook.logInWithReadPermissionsAsync('536462030493600')\n\t\t\tif(type === 'success') {\n\t\t\t\t// Build Firebase credential with the Facebook access token.\n\t\t\t\tconst credential = await firebase.auth.FacebookAuthProvider.credential(token);\n\t\t\t\t// Sign in with credential from the Facebook user.\n\t\t\t\tconst response = await firebase.auth().signInWithCredential(credential)\n\t\t\t\tconst user = await db.collection('users').doc(response.uid).get()\n\t\t\t\tif(!user.exists){\n\t\t\t\t\tconst user = {\n\t\t\t\t\t\tuid: response.uid,\n\t\t\t\t\t\temail: response.email,\n\t\t\t\t\t\tusername: response.displayName,\n\t\t\t\t\t\tphoto: response.photoURL,\n\t\t\t\t\t\ttoken: null,\n\t\t\t\t\t\tfollowers: [],\n\t\t\t\t\t\tfollowing: []\n\t\t\t\t\t}\n\t\t\t\t\tdb.collection('users').doc(response.uid).set(user)\n\t\t\t\t\tdispatch({type: 'LOGIN', payload: user})\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(getUser(response.uid))\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\talert(e)\n\t\t}\n\t}\n}\n\nexport const getUser = (uid, type) => {\n\treturn async (dispatch, getState) => {\n\t\t\n\t\ttry {\n\t\t\tconst userQuery = await db.collection('users').doc(uid).get()\n\t\t\tlet user = userQuery.data()\n\t\t\t//let res = JSON.stringify(user);\n\n\t\t\t///console.log('USER QUERY'+res);\n\t\n\n      let posts = []\n      const postsQuery = await db.collection('posts').where('uid', '==', uid).get()\n      postsQuery.forEach(function(response) {\n        posts.push(response.data())\n      })\n      user.posts = orderBy(posts, 'date','asc')\n\n\t\t\tif(type === 'LOGIN'){\n\t\t\t\tdispatch({type: 'LOGIN', payload: user })\n\t\t\t\tdispatch(getDog(user.dogs[0],'DOGLOGIN'))\n\t\t\t} \n\t\t\telse {\n\t\t\t\tdispatch({type: 'GET_PROFILE', payload: user })\n\t\t\t\tdispatch(getDog(user.dogs[0],'GET_DOGPROFILE'))\n\t\t\t}\n\n\t}\tcatch (e) {\n\t\t\talert(e)\n\t\t}\n\t}\n}\n\nexport const updateUser = () => {\n  return async ( dispatch, getState )  => {\n    const { uid, photo } = getState().user\n    try {\n      db.collection('users').doc(uid).update({\n        photo: photo\n      })\n    } catch(e) {\n\t\t\tconsole.log(\"in update user\");\n      alert(e)\n    }\n  }\n}\n\nexport const signup = () => {\n\treturn async (dispatch, getState) => {\n\t\ttry {\n\t\t\tconst { email, password, username} = getState().user\n\t\t\t\n\t\t\tconst response = await firebase.auth().createUserWithEmailAndPassword(email, password)\n\t\t\tconsole.log(\"Setting signupError to false\")\n\t\t\tdispatch({type:'NOSIGNUP_ERROR'})\n\t\t\tglobal.signupError = false\n\t\t\tif(response.user.uid) {\n\t\t\t\t\n\t\t\t\tconst user = {\n\t\t\t\t\tuid: response.user.uid,\n\t\t\t\t\temail: email,\n\t\t\t\t\tdogs:[],\n\t\t\t\t\ttoken: null\n\t\t\t\t}\n\t\t\t\tdb.collection('users').doc(response.user.uid).set(user)\n\t\t\t\tdispatch({type: 'LOGIN', payload: user})\n\t\t\t\tdispatch(allowNotifications(response.user.uid))\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(\"in sign up error\")\n\t\t\tdispatch({type:'SIGNUP_ERROR'})\n\t\t\talert(e)\n\t\t}\n\t}\n}\n\nexport const followUser = (dog) => {\n  return async ( dispatch, getState ) => {\n    const { dogId, photo, dogTag} = getState().dog\n    try {\n\t\t\tdb.collection('dogs').doc(dog.dogId).update({\n\t\t\t\tfollowers: firebase.firestore.FieldValue.arrayUnion(dogId)\n\t\t\t})\n\t\t\tdb.collection('dogs').doc(dogId).update({\n\t\t\t\tfollowing: firebase.firestore.FieldValue.arrayUnion(dog.dogId)\n\t\t\t})\n      db.collection('activity').doc().set({\n        followerId: dogId,\n        followerPhoto: photo,\n        followerName: dogTag,\n        dogId: dog.dogId,\n        photo: dog.photo,\n        dogTag: dog.dogTag,\n        date: new Date().getTime(),\n        type: 'FOLLOWER',\n      })\n      dispatch(sendNotification(dog.dogId, 'Started Following You'))\n\t dispatch(getDog(dog.dogId))\n    } catch(e) {\n      console.error(e)\n    }\n  }\n}\n\nexport const unfollowUser = (dog) => {\n  return async ( dispatch, getState ) => {\n    const { dogId, photo, dogTag } = getState().dog\n    try {\n\t\t\tdb.collection('dogs').doc(dog.dogId).update({\n\t\t\t\tfollowers: firebase.firestore.FieldValue.arrayRemove(dogId)\n\t\t\t})\n\t\t\tdb.collection('dogs').doc(dogId).update({\n\t\t\t\tfollowing: firebase.firestore.FieldValue.arrayRemove(dog.dogId)\n\t\t\t})\n\t\t\tdispatch(getDog(dog.dogId))\n    } catch(e) {\n      console.error(e)\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}