{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/kharl/pawSpace/node_modules/react-native-parallax-swiper/src/ParallaxSwiperPage.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PropTypes from 'prop-types';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    deviceWidth = _Dimensions$get.width,\n    deviceHeight = _Dimensions$get.height;\n\nvar ParallaxSwiperPage = function (_Component) {\n  _inherits(ParallaxSwiperPage, _Component);\n\n  function ParallaxSwiperPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ParallaxSwiperPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ParallaxSwiperPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.setPageSize = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n\n      _this.props.setScrollViewSize(nativeEvent.layout.width, nativeEvent.layout.height);\n    };\n\n    return _this;\n  }\n\n  _createClass(ParallaxSwiperPage, [{\n    key: \"getParallaxStyles\",\n    value: function getParallaxStyles(i) {\n      var _this$props = this.props,\n          speed = _this$props.speed,\n          dividerWidth = _this$props.dividerWidth,\n          vertical = _this$props.vertical,\n          animatedValue = _this$props.animatedValue,\n          pageWidth = _this$props.pageWidth,\n          pageHeight = _this$props.pageHeight;\n      var totalPageWidth = pageWidth + dividerWidth;\n      var horizontalSpeed = dividerWidth === 0 ? Math.abs(pageWidth * speed - pageWidth) : Math.abs(pageWidth * speed - dividerWidth - pageWidth);\n      var verticalSpeed = Math.abs(pageHeight * speed - pageHeight);\n      var horizontalStyles = {\n        transform: [{\n          translateX: animatedValue.interpolate({\n            inputRange: [(i - 1) * totalPageWidth, i * (pageWidth + dividerWidth), (i + 1) * totalPageWidth],\n            outputRange: [-horizontalSpeed, 0, horizontalSpeed],\n            extrapolate: 'clamp'\n          })\n        }]\n      };\n      var verticalStyles = {\n        transform: [{\n          translateY: animatedValue.interpolate({\n            inputRange: [(i - 1) * pageHeight, i * pageHeight, (i + 1) * pageHeight],\n            outputRange: [-verticalSpeed, 0, verticalSpeed],\n            extrapolate: 'clamp'\n          })\n        }]\n      };\n\n      if (speed === 1) {\n        return {};\n      }\n\n      if (vertical) {\n        return verticalStyles;\n      }\n\n      return horizontalStyles;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          index = _this$props2.index,\n          BackgroundComponent = _this$props2.BackgroundComponent,\n          ForegroundComponent = _this$props2.ForegroundComponent;\n      return React.createElement(View, {\n        onLayout: this.setPageSize,\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        }\n      }, React.createElement(Animated.View, {\n        style: this.getParallaxStyles(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }, BackgroundComponent), React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: styles.foregroundContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      }, ForegroundComponent));\n    }\n  }]);\n\n  return ParallaxSwiperPage;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    flex: 1\n  },\n  foregroundContainer: _objectSpread({}, StyleSheet.absoluteFillObject)\n});\nParallaxSwiperPage.propTypes = {\n  index: PropTypes.number,\n  BackgroundComponent: PropTypes.element,\n  ForegroundComponent: PropTypes.element\n};\nParallaxSwiperPage.defaultProps = {};\nexport default ParallaxSwiperPage;\nexport var ParallaxSwiperPagePropTypes = ParallaxSwiperPage.propTypes;","map":{"version":3,"sources":["/Users/kharl/pawSpace/node_modules/react-native-parallax-swiper/src/ParallaxSwiperPage.js"],"names":["React","Component","PropTypes","Dimensions","get","deviceWidth","width","deviceHeight","height","ParallaxSwiperPage","setPageSize","nativeEvent","props","setScrollViewSize","layout","i","speed","dividerWidth","vertical","animatedValue","pageWidth","pageHeight","totalPageWidth","horizontalSpeed","Math","abs","verticalSpeed","horizontalStyles","transform","translateX","interpolate","inputRange","outputRange","extrapolate","verticalStyles","translateY","index","BackgroundComponent","ForegroundComponent","styles","container","getParallaxStyles","foregroundContainer","StyleSheet","create","overflow","flex","absoluteFillObject","propTypes","number","element","defaultProps","ParallaxSwiperPagePropTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Animated, StyleSheet, Dimensions } from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst { width: deviceWidth, height: deviceHeight } = Dimensions.get('window');\n\nclass ParallaxSwiperPage extends Component {\n  setPageSize = ({ nativeEvent }) => {\n    this.props.setScrollViewSize(\n      nativeEvent.layout.width,\n      nativeEvent.layout.height,\n    );\n  };\n\n  getParallaxStyles(i) {\n    const {\n      speed,\n      dividerWidth,\n      vertical,\n      animatedValue,\n      pageWidth,\n      pageHeight,\n    } = this.props;\n    const totalPageWidth = pageWidth + dividerWidth;\n    const horizontalSpeed =\n      dividerWidth === 0\n        ? Math.abs(pageWidth * speed - pageWidth)\n        : Math.abs(pageWidth * speed - dividerWidth - pageWidth);\n    const verticalSpeed = Math.abs(pageHeight * speed - pageHeight);\n\n    const horizontalStyles = {\n      transform: [\n        {\n          translateX: animatedValue.interpolate({\n            inputRange: [\n              (i - 1) * totalPageWidth,\n              i * (pageWidth + dividerWidth),\n              (i + 1) * totalPageWidth,\n            ],\n            outputRange: [-horizontalSpeed, 0, horizontalSpeed],\n            extrapolate: 'clamp',\n          }),\n        },\n      ],\n    };\n\n    const verticalStyles = {\n      transform: [\n        {\n          translateY: animatedValue.interpolate({\n            inputRange: [\n              (i - 1) * pageHeight,\n              i * pageHeight,\n              (i + 1) * pageHeight,\n            ],\n            outputRange: [-verticalSpeed, 0, verticalSpeed],\n            extrapolate: 'clamp',\n          }),\n        },\n      ],\n    };\n\n    if (speed === 1) {\n      return {};\n    }\n\n    if (vertical) {\n      return verticalStyles;\n    }\n    return horizontalStyles;\n  }\n\n  render() {\n    const { index, BackgroundComponent, ForegroundComponent } = this.props;\n\n    return (\n      <View onLayout={this.setPageSize} style={styles.container}>\n        <Animated.View style={this.getParallaxStyles(index)}>\n          {BackgroundComponent}\n        </Animated.View>\n        <View pointerEvents=\"box-none\" style={styles.foregroundContainer}>\n          {ForegroundComponent}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    flex: 1,\n  },\n  foregroundContainer: {\n    ...StyleSheet.absoluteFillObject,\n  },\n});\n\nParallaxSwiperPage.propTypes = {\n  index: PropTypes.number,\n  BackgroundComponent: PropTypes.element,\n  ForegroundComponent: PropTypes.element,\n};\n\nParallaxSwiperPage.defaultProps = {};\n\nexport default ParallaxSwiperPage;\nexport const ParallaxSwiperPagePropTypes = ParallaxSwiperPage.propTypes;\n"]},"metadata":{},"sourceType":"module"}