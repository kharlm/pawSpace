{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport invariant from \"../utils/invariant\";\n\nfunction createNavigator(NavigatorView, router, navigationConfig) {\n  var Navigator = function (_React$Component) {\n    _inherits(Navigator, _React$Component);\n\n    function Navigator() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, Navigator);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Navigator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _defineProperty(_assertThisInitialized(_this), \"state\", {\n        descriptors: {},\n        screenProps: _this.props.screenProps\n      });\n\n      return _this;\n    }\n\n    _createClass(Navigator, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(NavigatorView, _extends({}, this.props, {\n          screenProps: this.state.screenProps,\n          navigation: this.props.navigation,\n          navigationConfig: navigationConfig,\n          descriptors: this.state.descriptors\n        }));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        var prevDescriptors = prevState.descriptors;\n        var navigation = nextProps.navigation,\n            screenProps = nextProps.screenProps;\n        invariant(navigation != null, 'The navigation prop is missing for this navigator. In react-navigation 3 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html');\n        var state = navigation.state;\n        var routes = state.routes;\n\n        if (typeof routes === 'undefined') {\n          throw new TypeError('No \"routes\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop');\n        }\n\n        var descriptors = {};\n        routes.forEach(function (route) {\n          if (prevDescriptors && prevDescriptors[route.key] && route === prevDescriptors[route.key].state && screenProps === prevState.screenProps) {\n            descriptors[route.key] = prevDescriptors[route.key];\n            return;\n          }\n\n          var getComponent = router.getComponentForRouteName.bind(null, route.routeName);\n          var childNavigation = navigation.getChildNavigation(route.key);\n          var options = router.getScreenOptions(childNavigation, screenProps);\n          descriptors[route.key] = {\n            key: route.key,\n            getComponent: getComponent,\n            options: options,\n            state: route,\n            navigation: childNavigation\n          };\n        });\n        return {\n          descriptors: descriptors,\n          screenProps: screenProps\n        };\n      }\n    }]);\n\n    return Navigator;\n  }(React.Component);\n\n  _defineProperty(Navigator, \"router\", router);\n\n  _defineProperty(Navigator, \"navigationOptions\", navigationConfig.navigationOptions);\n\n  return Navigator;\n}\n\nexport default createNavigator;","map":{"version":3,"sources":["../../src/navigators/createNavigator.js"],"names":["React","navigationConfig","descriptors","screenProps","prevDescriptors","prevState","invariant","navigation","state","routes","route","getComponent","router","childNavigation","options","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport invariant from '../utils/invariant';\n\nfunction createNavigator(NavigatorView, router, navigationConfig) {\n  class Navigator extends React.Component {\n    static router = router;\n    static navigationOptions = navigationConfig.navigationOptions;\n\n    state = {\n      descriptors: {},\n      screenProps: this.props.screenProps,\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n      const prevDescriptors = prevState.descriptors;\n      const { navigation, screenProps } = nextProps;\n      invariant(\n        navigation != null,\n        'The navigation prop is missing for this navigator. In react-navigation 3 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html'\n      );\n      const { state } = navigation;\n      const { routes } = state;\n      if (typeof routes === 'undefined') {\n        throw new TypeError(\n          'No \"routes\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop'\n        );\n      }\n\n      const descriptors = {};\n\n      routes.forEach(route => {\n        if (\n          prevDescriptors &&\n          prevDescriptors[route.key] &&\n          route === prevDescriptors[route.key].state &&\n          screenProps === prevState.screenProps\n        ) {\n          descriptors[route.key] = prevDescriptors[route.key];\n          return;\n        }\n        const getComponent = router.getComponentForRouteName.bind(\n          null,\n          route.routeName\n        );\n        const childNavigation = navigation.getChildNavigation(route.key);\n        const options = router.getScreenOptions(childNavigation, screenProps);\n        descriptors[route.key] = {\n          key: route.key,\n          getComponent,\n          options,\n          state: route,\n          navigation: childNavigation,\n        };\n      });\n\n      return { descriptors, screenProps };\n    }\n\n    render() {\n      return (\n        <NavigatorView\n          {...this.props}\n          screenProps={this.state.screenProps}\n          navigation={this.props.navigation}\n          navigationConfig={navigationConfig}\n          descriptors={this.state.descriptors}\n        />\n      );\n    }\n  }\n\n  return Navigator;\n}\n\nexport default createNavigator;\n"]},"metadata":{},"sourceType":"module"}