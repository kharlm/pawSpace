{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/kharl/pawSpace/screens/Messages.js\";\nimport React from 'react';\nimport styles from \"../styles\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { getMessages } from \"../actions/message\";\nimport moment from 'moment';\nimport { groupBy, values } from 'lodash';\n\nvar Messages = function (_React$Component) {\n  _inherits(Messages, _React$Component);\n\n  function Messages() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Messages);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Messages)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentDidMount = function () {\n      _this.props.getMessages();\n    };\n\n    _this.goToChat = function (members) {\n      var dogId = members.filter(function (id) {\n        return id !== '56bcfdeb-9d83-4159-929e-7b4fb43787cc';\n      });\n\n      _this.props.navigation.navigate('Chat', dogId[0]);\n    };\n\n    return _this;\n  }\n\n  _createClass(Messages, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.messages) return React.createElement(ActivityIndicator, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        }\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }, React.createElement(FlatList, {\n        keyExtractor: function keyExtractor(item) {\n          return JSON.stringify(item[0].date);\n        },\n        data: values(groupBy(this.props.messages, 'members')),\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.goToChat(item[0].members);\n            },\n            style: [styles.row, styles.space],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            }\n          }, React.createElement(Image, {\n            style: styles.roundImage,\n            source: {\n              uri: item[0].photo\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            }\n          }), React.createElement(View, {\n            style: [styles.container, styles.left],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            }\n          }, React.createElement(Text, {\n            style: styles.bold,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            }\n          }, item[0].username), React.createElement(Text, {\n            style: styles.gray,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            }\n          }, item[0].message), React.createElement(Text, {\n            style: [styles.gray, styles.small],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            }\n          }, moment(item[0].date).format('ll'))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        }\n      }));\n    }\n  }]);\n\n  return Messages;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getMessages: getMessages\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    messages: state.messages,\n    dog: state.dogId\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);","map":{"version":3,"sources":["/Users/kharl/pawSpace/screens/Messages.js"],"names":["React","styles","connect","bindActionCreators","getMessages","moment","groupBy","values","Messages","componentDidMount","props","goToChat","members","dogId","filter","id","navigation","navigate","messages","container","item","JSON","stringify","date","index","row","space","roundImage","uri","photo","left","bold","username","gray","message","small","format","Component","mapDispatchToProps","dispatch","mapStateToProps","state","user","dog"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from '../styles'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'\nimport { View, FlatList, Text, Image, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport { getMessages } from '../actions/message'\nimport moment from 'moment'\nimport { groupBy, values } from 'lodash'\n\nclass Messages extends React.Component {\n\n  componentDidMount = () => {\n    this.props.getMessages()\n  }\n\n  goToChat = (members) => {\n    const dogId = members.filter(id => id !== '56bcfdeb-9d83-4159-929e-7b4fb43787cc')\n    this.props.navigation.navigate('Chat', dogId[0])\n  }\n\n  render() {\n    if (!this.props.messages) return <ActivityIndicator style={styles.container}/>\n    return ( \n      <View style={styles.container}>\n        <FlatList\n          keyExtractor={(item) => JSON.stringify(item[0].date)}\n          data={values(groupBy(this.props.messages,'members'))}\n          renderItem={({ item, index }) => (\n          <TouchableOpacity onPress={() => this.goToChat(item[0].members)} style={[styles.row, styles.space]}>\n            <Image style={styles.roundImage} source={{uri: item[0].photo}}/>\n            <View style={[styles.container, styles.left]}>\n              <Text style={styles.bold}>{item[0].username}</Text>\n              <Text style={styles.gray}>{item[0].message}</Text>\n              <Text style={[styles.gray, styles.small]}>{moment(item[0].date).format('ll')}</Text>\n            </View>\n          </TouchableOpacity>\n        )}/> \n      </View>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ getMessages }, dispatch)\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    messages: state.messages,\n    dog: state.dogId\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);"]},"metadata":{},"sourceType":"module"}