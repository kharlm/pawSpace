{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/kharl/pawSpace/screens/CategoryScreens/ColorCategory.js\";\nimport React from 'react';\nimport styles from \"../../styles.js\";\nimport styles1 from \"../../styles1\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport db from \"../../config/firebase\";\nimport { getDog } from \"../../actions/dog\";\nimport DogInfo from \"../DogInfo\";\nimport Category from \"../Category\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport RNPickerSelect from 'react-native-picker-select';\n\nvar ColorCategory = function (_React$Component) {\n  _inherits(ColorCategory, _React$Component);\n\n  function ColorCategory(props) {\n    var _this;\n\n    _classCallCheck(this, ColorCategory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColorCategory).call(this, props));\n    _this.state = {\n      dogColor: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ColorCategory, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"700\",\n          fontSize: 18,\n          paddingTop: 5,\n          paddingBottom: 10,\n          paddingHorizontal: width / 4 + 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        }\n      }, \"View Dogs By Breed\"), React.createElement(TouchableWithoutFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingHorizontal: width / 4,\n          paddingTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginLeft: 10,\n          height: 30,\n          width: 140,\n          borderRadius: 25,\n          backgroundColor: '#5490fe',\n          paddingTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        }\n      }, React.createElement(RNPickerSelect, {\n        placeholder: {\n          label: \"View all Colors\",\n          color: 'red'\n        },\n        onValueChange: function onValueChange(dogColor) {\n          return _this2.setState({\n            dogColor: dogColor\n          });\n        },\n        onDonePress: function onDonePress() {\n          return _this2.props.navigation.navigate('ColorPosts', {\n            color: _this2.state.dogColor\n          });\n        },\n        items: colors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      })))), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          padding: 10,\n          marginTop: 5,\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('ColorPosts', {\n            color: 'White'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, React.createElement(Category, {\n        width: width,\n        height: height,\n        info: \"White Dogs\",\n        infoImage: require(\"../../assets/whitedog.jpeg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('ColorPosts', {\n            color: 'Black'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      }, React.createElement(Category, {\n        width: width,\n        height: height,\n        info: \"Black Dogs\",\n        infoImage: require(\"../../assets/blackdog.jpeg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('ColorPosts', {\n            color: 'Brown'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        }\n      }, React.createElement(Category, {\n        width: width,\n        height: height,\n        info: \"Brown Dogs\",\n        infoImage: require(\"../../assets/browndog.jpeg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('ColorPosts', {\n            color: 'Red'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, React.createElement(Category, {\n        width: width,\n        height: height,\n        info: \"Red Dogs\",\n        infoImage: require(\"../../assets/reddog.jpeg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }))));\n    }\n  }]);\n\n  return ColorCategory;\n}(React.Component);\n\nvar colors = [{\n  label: 'Apricot',\n  value: 'Apricot'\n}, {\n  label: 'Beige',\n  value: 'Beige'\n}, {\n  label: 'Black',\n  value: 'Black'\n}, {\n  label: 'Blue',\n  value: 'Blue'\n}, {\n  label: 'Brown',\n  value: 'Brown'\n}, {\n  label: 'Chesnut',\n  value: 'Chesnut'\n}, {\n  label: 'Cream',\n  value: 'Cream'\n}, {\n  label: 'Dark Blue',\n  value: 'Dark Blue'\n}, {\n  label: 'Dark Brown',\n  value: 'Dark Brown'\n}, {\n  label: 'Fawn',\n  value: 'Fawn'\n}, {\n  label: 'Gold',\n  value: 'Gold'\n}, {\n  label: 'Gray',\n  value: 'Gray'\n}, {\n  label: 'Light Brown',\n  value: 'Light Brown'\n}, {\n  label: 'Light Silver',\n  value: 'Light Silver'\n}, {\n  label: 'Lilac',\n  value: 'Lilac'\n}, {\n  label: 'Orange',\n  value: 'Orange'\n}, {\n  label: 'Red',\n  value: 'Red'\n}, {\n  label: 'Rust',\n  value: 'Rust'\n}, {\n  label: 'Silver',\n  value: 'Silver'\n}, {\n  label: 'Tan',\n  value: 'Tan'\n}, {\n  label: 'Wheaten',\n  value: 'Wheaten'\n}, {\n  label: 'White',\n  value: 'White'\n}, {\n  label: 'Yellow',\n  value: 'Yellow'\n}];\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getDog: getDog\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    dog: state.dog\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorCategory);","map":{"version":3,"sources":["/Users/kharl/pawSpace/screens/CategoryScreens/ColorCategory.js"],"names":["React","styles","styles1","connect","bindActionCreators","db","getDog","DogInfo","Category","Dimensions","get","width","height","RNPickerSelect","ColorCategory","props","state","dogColor","fontWeight","fontSize","paddingTop","paddingBottom","paddingHorizontal","justifyContent","flexDirection","alignItems","marginLeft","borderRadius","backgroundColor","label","color","setState","navigation","navigate","colors","padding","marginTop","flexWrap","require","Component","value","mapDispatchToProps","dispatch","mapStateToProps","user","dog"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from '../../styles.js'\nimport styles1 from '../../styles1'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { View, Text, SafeAreaView, TextInput, FlatList, Image, TouchableOpacity,Dimensions, TouchableWithoutFeedback } from 'react-native';\nimport db from '../../config/firebase';\nimport { getDog } from '../../actions/dog'\nimport DogInfo from '../DogInfo';\nimport Category from '../Category';\nimport { ScrollView } from 'react-native';\nconst  { width,height } = Dimensions.get('window');\nimport RNPickerSelect from 'react-native-picker-select';\n\nclass ColorCategory extends React.Component {\n    constructor(props) {\n        super(props);\n          this.state = { \n              dogColor: \"\"\n          }\n      }\n    render() {\n        return (\n            <ScrollView>\n            \n         \n            <Text style={{fontWeight:\"700\",fontSize: 18,paddingTop: 5,paddingBottom: 10,paddingHorizontal: (width/4) + 5 }}>View Dogs By Breed</Text>\n            <TouchableWithoutFeedback >\n            <View style={{paddingHorizontal: (width/4),paddingTop: 5 }}>\n           \n            <View style={{justifyContent: \"center\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                marginLeft: 10,\n                height: 30,\n                width: 140,\n                borderRadius: 25,\n                backgroundColor: '#5490fe',\n                paddingTop: 5}}>\n             <RNPickerSelect\n             placeholder={{\n              label: \"View all Colors\",\n              color: 'red'\n            }}\n            onValueChange={(dogColor) => this.setState({dogColor})}\n            onDonePress = {() => this.props.navigation.navigate('ColorPosts', {color: this.state.dogColor })}\n           \n            items={colors}\n         />\n          </View>\n        \n         </View>\n         </TouchableWithoutFeedback >\n            <View\n                     style={{\n                      flexDirection: \"row\",\n                      padding: 10,\n                      marginTop: 5,\n                      flexWrap: \"wrap\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n            \n            \n            <TouchableOpacity onPress={() => this.props.navigation.navigate('ColorPosts', {color: 'White' })}>\n            <Category\n               width={width}\n               height={height}\n               info ='White Dogs'\n               infoImage ={require('../../assets/whitedog.jpeg')}\n             />\n             </TouchableOpacity>\n   \n             <TouchableOpacity onPress={() => this.props.navigation.navigate('ColorPosts', {color: 'Black' })}>\n               <Category\n               width={width}\n               height={height}\n               info ='Black Dogs'\n               infoImage ={require('../../assets/blackdog.jpeg')}\n             />\n             </TouchableOpacity>\n   \n              <TouchableOpacity onPress={() => this.props.navigation.navigate('ColorPosts', {color: 'Brown' })}>\n               \n               <Category\n               width={width}\n               height={height}\n               info ='Brown Dogs'\n               infoImage={require('../../assets/browndog.jpeg')}\n             />\n             </TouchableOpacity>\n   \n             <TouchableOpacity onPress={() => this.props.navigation.navigate('ColorPosts', {color: 'Red' })}>\n               <Category\n               width={width}\n               height={height}\n               info ='Red Dogs'\n               infoImage={require('../../assets/reddog.jpeg')}\n             />\n             </TouchableOpacity>\n             </View>\n              </ScrollView>\n       );\n        }\n       \n}\n\nlet colors =[ {label: 'Apricot',value: 'Apricot'},\n{label: 'Beige',value: 'Beige'},\n{label: 'Black',value: 'Black'},\n{label: 'Blue',value: 'Blue'},\n{label: 'Brown',value: 'Brown'},\n{label: 'Chesnut',value: 'Chesnut'},\n{label: 'Cream',value: 'Cream'},\n{label: 'Dark Blue',value: 'Dark Blue'},\n{label: 'Dark Brown',value: 'Dark Brown'},\n{label: 'Fawn',value: 'Fawn'},\n{label: 'Gold',value: 'Gold'},\n{label: 'Gray',value: 'Gray'},\n{label: 'Light Brown',value: 'Light Brown'},\n{label: 'Light Silver',value: 'Light Silver'},\n{label: 'Lilac',value: 'Lilac'},\n{label: 'Orange',value: 'Orange'},\n{label: 'Red',value: 'Red'},\n{label: 'Rust',value: 'Rust'},\n{label: 'Silver',value: 'Silver'},\n{label: 'Tan',value: 'Tan'},\n{label: 'Wheaten',value: 'Wheaten'},\n{label: 'White',value: 'White'},\n{label: 'Yellow',value: 'Yellow'}]\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ getDog }, dispatch)\n  }\n  \n  const mapStateToProps = (state) => {\n    return {\n      user: state.user,\n      dog: state.dog\n    }\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(ColorCategory)"]},"metadata":{},"sourceType":"module"}