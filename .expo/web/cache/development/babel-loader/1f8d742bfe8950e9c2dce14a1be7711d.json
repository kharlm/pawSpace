{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from 'firebase';\nimport db from \"../config/firebase\";\nimport uuid from 'uuid';\nimport cloneDeep from 'lodash/cloneDeep';\nimport orderBy from 'lodash/orderBy';\nimport { sendNotification } from \"./\";\nimport { getDog } from \"../actions/dog\";\nimport { postPage } from \"../actions/dog\";\nimport { connect } from 'react-redux';\nimport { AnimatedRegion } from 'react-native-maps';\nvar GOOGLE_API = 'https://maps.googleapis.com/maps/api/geocode/json?';\nvar key = 'AIzaSyCKtd8tWSWZ1jMR8tw11c-FgmIPsF9Ycqk';\nexport var updateDescription = function updateDescription(input) {\n  return {\n    type: 'UPDATE_DESCRIPTION',\n    payload: input\n  };\n};\nexport var updatePhoto = function updatePhoto(input) {\n  return {\n    type: 'UPDATE_PHOTO',\n    payload: input\n  };\n};\nexport var updateLocation = function updateLocation(input) {\n  return {\n    type: 'UPDATE_LOCATION',\n    payload: input\n  };\n};\nexport var updateDog = function updateDog() {\n  return function _callee(dispatch, getState) {\n    var _getState$dog, dogname, breed, color, age, gender, weight, dogTag, bio, dogId, photo;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _getState$dog = getState().dog, dogname = _getState$dog.dogname, breed = _getState$dog.breed, color = _getState$dog.color, age = _getState$dog.age, gender = _getState$dog.gender, weight = _getState$dog.weight, dogTag = _getState$dog.dogTag, bio = _getState$dog.bio, dogId = _getState$dog.dogId, photo = _getState$dog.photo;\n\n            try {\n              db.collection('dogs').doc(dogId).update({\n                name: dogname,\n                breed: breed,\n                age: age,\n                color: color,\n                gender: gender,\n                weight: weight,\n                dogTag: dogTag,\n                bio: bio,\n                dogId: dogId,\n                followers: [],\n                following: [],\n                photo: photo\n              });\n            } catch (e) {\n              console.log(\"inside update dog error\");\n              alert(e);\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n};\nexport var updatePosts = function updatePosts() {\n  return function _callee2(dispatch, getState) {\n    var _getState$post, id, postPhoto, postDescription, postLocation, dogId, photo, dogTag, dog, likes, comments, date;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _getState$post = getState().post, id = _getState$post.id, postPhoto = _getState$post.postPhoto, postDescription = _getState$post.postDescription, postLocation = _getState$post.postLocation, dogId = _getState$post.dogId, photo = _getState$post.photo, dogTag = _getState$post.dogTag, dog = _getState$post.dog, likes = _getState$post.likes, comments = _getState$post.comments, date = _getState$post.date;\n\n            try {\n              db.collection('posts').doc(id).update({\n                id: id,\n                postPhoto: postPhoto,\n                postDescription: postDescription,\n                postLocation: postLocation,\n                dogId: dogId,\n                photo: photo,\n                dogTag: dogTag,\n                dog: dog,\n                likes: likes,\n                comments: comments,\n                date: date\n              });\n            } catch (e) {\n              console.log(\"post update error\");\n              alert(e);\n            }\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n};\nexport var uploadPost = function uploadPost(isVideo, thumbnail) {\n  console.log(\"thumb: \" + thumbnail);\n  return function _callee3(dispatch, getState) {\n    var _getState, post, dog, id, dogQuery, dog1, upload;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _getState = getState(), post = _getState.post, dog = _getState.dog;\n            _context3.prev = 1;\n            id = uuid.v4();\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(db.collection('dogs').doc(dog.dogId).get());\n\n          case 5:\n            dogQuery = _context3.sent;\n            dog1 = dogQuery.data();\n            upload = {\n              id: id,\n              postPhoto: post.photo,\n              postDescription: post.description || ' ',\n              postLocation: post.location || ' ',\n              dogId: dog1.dogId,\n              photo: dog1.photo || ' ',\n              dogTag: dog1.dogTag,\n              dog: dog1,\n              likes: [],\n              comments: [],\n              flagged: 'no',\n              date: new Date().getTime(),\n              isVideo: isVideo,\n              thumbnail: thumbnail\n            };\n            db.collection('posts').doc(id).set(upload);\n            dispatch(getPosts());\n            dispatch(getDog(dog.dogId, 'DOGLOGIN'));\n            dispatch({\n              type: 'POST_PAGE',\n              payload: 'true'\n            });\n            _context3.next = 17;\n            break;\n\n          case 14:\n            _context3.prev = 14;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.error(_context3.t0);\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 14]]);\n  };\n};\nexport var deletePost = function deletePost(post) {\n  return function _callee4(dispatch, getState) {\n    var _getState2, dog, desertRef;\n\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _getState2 = getState(), dog = _getState2.dog;\n            desertRef = firebase.storage().refFromURL(post.postPhoto);\n            console.log(\"ref: \" + desertRef);\n            db.collection('posts').doc(post.id).delete();\n            desertRef.delete().then(function () {}).catch(function (error) {});\n            dispatch(getPosts());\n            dispatch(getDog(dog.dogId, 'DOGLOGIN'));\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  };\n};\nexport var getPosts = function getPosts(dog) {\n  return function _callee5(dispatch, getState) {\n    var _getState$dog2, dogId, dogTag, photo, posts, rest, array;\n\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _getState$dog2 = getState().dog, dogId = _getState$dog2.dogId, dogTag = _getState$dog2.dogTag, photo = _getState$dog2.photo;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(db.collection('posts').get());\n\n          case 4:\n            posts = _context5.sent;\n            array = [];\n            posts.forEach(function (post) {\n              array.push(post.data());\n            });\n            dispatch({\n              type: 'GET_POSTS',\n              payload: orderBy(array, 'date', 'desc')\n            });\n            _context5.next = 13;\n            break;\n\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](1);\n            alert(_context5.t0);\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[1, 10]]);\n  };\n};\nexport var flagPost = function flagPost(postId) {\n  return function _callee6() {\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            try {\n              db.collection('posts').doc(postId).update({\n                flagged: 'yes'\n              });\n            } catch (e) {\n              console.log(\"flag post error\");\n              alert(e);\n            }\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    });\n  };\n};\nexport var getPost = function getPost(id) {\n  return function _callee7(dispatch, getState) {\n    var posts, array;\n    return _regeneratorRuntime.async(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            console.log(\"post id: \" + id);\n            _context7.next = 4;\n            return _regeneratorRuntime.awrap(db.collection('posts').where('id', '==', id).get());\n\n          case 4:\n            posts = _context7.sent;\n            array = [];\n            posts.forEach(function (post) {\n              console.log(\"posIDS: \" + post.data());\n              array.push(post.data());\n            });\n            dispatch({\n              type: 'GET_POST',\n              payload: array\n            });\n            _context7.next = 13;\n            break;\n\n          case 10:\n            _context7.prev = 10;\n            _context7.t0 = _context7[\"catch\"](0);\n            alert(_context7.t0);\n\n          case 13:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[0, 10]]);\n  };\n};\nexport var getBreedPosts = function getBreedPosts(breed) {\n  return function _callee8(dispatch, getState) {\n    var posts, array;\n    return _regeneratorRuntime.async(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return _regeneratorRuntime.awrap(db.collection('posts').where('dog.breed', '==', breed).get());\n\n          case 3:\n            posts = _context8.sent;\n            array = [];\n            posts.forEach(function (post) {\n              array.push(post.data());\n            });\n            dispatch({\n              type: 'GET_DOGPOSTS',\n              payload: array\n            });\n            _context8.next = 12;\n            break;\n\n          case 9:\n            _context8.prev = 9;\n            _context8.t0 = _context8[\"catch\"](0);\n            alert(_context8.t0);\n\n          case 12:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  };\n};\nexport var getColorPosts = function getColorPosts(color) {\n  return function _callee9(dispatch, getState) {\n    var posts, array, res;\n    return _regeneratorRuntime.async(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _context9.next = 3;\n            return _regeneratorRuntime.awrap(db.collection('posts').where('dog.color', '==', color).get());\n\n          case 3:\n            posts = _context9.sent;\n            array = [];\n            posts.forEach(function (post) {\n              array.push(post.data());\n            });\n            res = JSON.stringify(array);\n            dispatch({\n              type: 'GET_DOGPOSTS',\n              payload: array\n            });\n            _context9.next = 13;\n            break;\n\n          case 10:\n            _context9.prev = 10;\n            _context9.t0 = _context9[\"catch\"](0);\n            alert(_context9.t0);\n\n          case 13:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, [[0, 10]]);\n  };\n};\nexport var getGenderPosts = function getGenderPosts(gender) {\n  return function _callee10(dispatch, getState) {\n    var posts, array, res;\n    return _regeneratorRuntime.async(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return _regeneratorRuntime.awrap(db.collection('posts').where('dog.gender', '==', gender).get());\n\n          case 3:\n            posts = _context10.sent;\n            array = [];\n            posts.forEach(function (post) {\n              array.push(post.data());\n            });\n            res = JSON.stringify(array);\n            dispatch({\n              type: 'GET_DOGPOSTS',\n              payload: array\n            });\n            _context10.next = 13;\n            break;\n\n          case 10:\n            _context10.prev = 10;\n            _context10.t0 = _context10[\"catch\"](0);\n            alert(_context10.t0);\n\n          case 13:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, null, [[0, 10]]);\n  };\n};\nexport var getWeightPosts = function getWeightPosts(firstWeight, secondWeight) {\n  return function _callee11(dispatch, getState) {\n    var posts, array, res;\n    return _regeneratorRuntime.async(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            _context11.next = 3;\n            return _regeneratorRuntime.awrap(db.collection('posts').where('dog.weight', '>=', firstWeight).where('dog.weight', '<=', secondWeight).get());\n\n          case 3:\n            posts = _context11.sent;\n            array = [];\n            posts.forEach(function (post) {\n              array.push(post.data());\n            });\n            res = JSON.stringify(array);\n            dispatch({\n              type: 'GET_DOGPOSTS',\n              payload: array\n            });\n            _context11.next = 13;\n            break;\n\n          case 10:\n            _context11.prev = 10;\n            _context11.t0 = _context11[\"catch\"](0);\n            alert(_context11.t0);\n\n          case 13:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, null, [[0, 10]]);\n  };\n};\nexport var getAgePosts = function getAgePosts(firstAge, secondAge) {\n  return function _callee12(dispatch, getState) {\n    var posts, array, res;\n    return _regeneratorRuntime.async(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            _context12.next = 3;\n            return _regeneratorRuntime.awrap(db.collection('posts').where('dog.age', '>=', firstAge).where('dog.age', '<=', secondAge).get());\n\n          case 3:\n            posts = _context12.sent;\n            array = [];\n            posts.forEach(function (post) {\n              array.push(post.data());\n            });\n            res = JSON.stringify(array);\n            dispatch({\n              type: 'GET_DOGPOSTS',\n              payload: array\n            });\n            _context12.next = 13;\n            break;\n\n          case 10:\n            _context12.prev = 10;\n            _context12.t0 = _context12[\"catch\"](0);\n            alert(_context12.t0);\n\n          case 13:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, null, [[0, 10]]);\n  };\n};\nexport var getlocationPosts = function getlocationPosts(city, state, country) {\n  return function _callee13(dispatch, getState) {\n    var posts, postsQuery, _postsQuery;\n\n    return _regeneratorRuntime.async(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            posts = [];\n\n            if (!(country === \"United States\")) {\n              _context13.next = 10;\n              break;\n            }\n\n            _context13.next = 5;\n            return _regeneratorRuntime.awrap(db.collection('posts').where('postLocation.state', '==', state).get());\n\n          case 5:\n            postsQuery = _context13.sent;\n            postsQuery.forEach(function (response) {\n              posts.push(response.data());\n            });\n            dispatch({\n              type: 'GET_EXPLOREPOSTS',\n              payload: posts\n            });\n            _context13.next = 15;\n            break;\n\n          case 10:\n            _context13.next = 12;\n            return _regeneratorRuntime.awrap(db.collection('posts').where('postLocation.country', '==', country).get());\n\n          case 12:\n            _postsQuery = _context13.sent;\n\n            _postsQuery.forEach(function (response) {\n              posts.push(response.data());\n            });\n\n            dispatch({\n              type: 'GET_EXPLOREPOSTS',\n              payload: posts\n            });\n\n          case 15:\n            _context13.next = 21;\n            break;\n\n          case 17:\n            _context13.prev = 17;\n            _context13.t0 = _context13[\"catch\"](0);\n            console.log(\"in get posts\");\n            alert(_context13.t0);\n\n          case 21:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, null, [[0, 17]]);\n  };\n};\nexport var likePost = function likePost(post) {\n  return function (dispatch, getState) {\n    var _getState$dog3 = getState().dog,\n        dogId = _getState$dog3.dogId,\n        dogTag = _getState$dog3.dogTag,\n        photo = _getState$dog3.photo;\n\n    try {\n      db.collection('posts').doc(post.id).update({\n        likes: firebase.firestore.FieldValue.arrayUnion(dogId)\n      });\n      db.collection('activity').doc().set({\n        postId: post.id,\n        postPhoto: post.postPhoto,\n        likerId: dogId,\n        likerPhoto: photo,\n        likerName: dogTag,\n        dogId: post.dogId,\n        date: new Date().getTime(),\n        type: 'LIKE',\n        thumbnail: post.thumbnail,\n        isVideo: post.isVideo\n      });\n      dispatch(sendNotification(post.dog.uid, 'Licked Your Photo'));\n      dispatch(getPosts());\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\nexport var unlikePost = function unlikePost(post) {\n  return function _callee14(dispatch, getState) {\n    var dogId, query;\n    return _regeneratorRuntime.async(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            dogId = getState().dog.dogId;\n            _context14.prev = 1;\n            db.collection('posts').doc(post.id).update({\n              likes: firebase.firestore.FieldValue.arrayRemove(dogId)\n            });\n            _context14.next = 5;\n            return _regeneratorRuntime.awrap(db.collection('activity').where('postId', '==', post.id).where('likerId', '==', dogId).get());\n\n          case 5:\n            query = _context14.sent;\n            query.forEach(function (response) {\n              response.ref.delete();\n            });\n            dispatch(getPosts());\n            _context14.next = 13;\n            break;\n\n          case 10:\n            _context14.prev = 10;\n            _context14.t0 = _context14[\"catch\"](1);\n            console.error(_context14.t0);\n\n          case 13:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, null, [[1, 10]]);\n  };\n};\nexport var getComments = function getComments(post) {\n  return function (dispatch) {\n    dispatch({\n      type: 'GET_COMMENTS',\n      payload: orderBy(post.comments, 'date', 'desc')\n    });\n  };\n};\nexport var addComment = function addComment(text, post) {\n  return function (dispatch, getState) {\n    var _getState$dog4 = getState().dog,\n        dogId = _getState$dog4.dogId,\n        photo = _getState$dog4.photo,\n        dogTag = _getState$dog4.dogTag;\n    var comments = cloneDeep(getState().post.comments.reverse());\n\n    try {\n      var comment = {\n        comment: text,\n        commenterId: dogId,\n        commenterPhoto: photo || '',\n        commenterName: dogTag,\n        date: new Date().getTime()\n      };\n      db.collection('posts').doc(post.id).update({\n        comments: firebase.firestore.FieldValue.arrayUnion(comment)\n      });\n      comment.postId = post.id;\n      comment.postPhoto = post.postPhoto;\n      comment.dogId = post.dogId;\n      comment.type = 'COMMENT';\n      comments.push(comment);\n      dispatch({\n        type: 'GET_COMMENTS',\n        payload: comments.reverse()\n      });\n      db.collection('activity').doc().set(comment);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    followUser: followUser,\n    unfollowUser: unfollowUser,\n    getDog: getDog,\n    getUser: getUser\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post,\n    user: state.user,\n    userprofile: state.profile,\n    dog: state.dog\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps);","map":{"version":3,"sources":["/Users/kharl/pawSpace/actions/post.js"],"names":["firebase","db","uuid","cloneDeep","orderBy","sendNotification","getDog","postPage","connect","AnimatedRegion","GOOGLE_API","key","updateDescription","input","type","payload","updatePhoto","updateLocation","updateDog","dispatch","getState","dog","dogname","breed","color","age","gender","weight","dogTag","bio","dogId","photo","collection","doc","update","name","followers","following","e","console","log","alert","updatePosts","post","id","postPhoto","postDescription","postLocation","likes","comments","date","uploadPost","isVideo","thumbnail","v4","get","dogQuery","dog1","data","upload","description","location","flagged","Date","getTime","set","getPosts","error","deletePost","desertRef","storage","refFromURL","delete","then","catch","posts","array","forEach","push","flagPost","postId","getPost","where","getBreedPosts","getColorPosts","res","JSON","stringify","getGenderPosts","getWeightPosts","firstWeight","secondWeight","getAgePosts","firstAge","secondAge","getlocationPosts","city","state","country","postsQuery","response","likePost","firestore","FieldValue","arrayUnion","likerId","likerPhoto","likerName","uid","unlikePost","arrayRemove","query","ref","getComments","addComment","text","reverse","comment","commenterId","commenterPhoto","commenterName","mapDispatchToProps","bindActionCreators","followUser","unfollowUser","getUser","mapStateToProps","user","userprofile","profile"],"mappings":"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","sourcesContent":["import firebase from 'firebase'\nimport db from '../config/firebase'\nimport uuid from 'uuid'\nimport cloneDeep from 'lodash/cloneDeep'\nimport orderBy from 'lodash/orderBy'\nimport { sendNotification } from './'\nimport {getDog} from '../actions/dog'\nimport {postPage} from '../actions/dog'\nimport { connect } from 'react-redux'\nimport  { AnimatedRegion } from 'react-native-maps'\nconst GOOGLE_API = 'https://maps.googleapis.com/maps/api/geocode/json?'\nconst key = 'AIzaSyCKtd8tWSWZ1jMR8tw11c-FgmIPsF9Ycqk'\n\n\n\n\nexport const updateDescription = (input) => {\n\treturn {type: 'UPDATE_DESCRIPTION', payload: input}\n}\n\nexport const updatePhoto = (input) => {\n\treturn {type: 'UPDATE_PHOTO', payload: input}\n}\n\nexport const updateLocation = (input) => {\n\treturn {type: 'UPDATE_LOCATION', payload: input}\n}\n\n\n\nexport const updateDog = () => {\n  return async ( dispatch, getState )  => {\n    const {dogname,breed,color,age,gender,weight,dogTag,bio,dogId,photo } = getState().dog\n    try {\n      //const {dog} = getState()\n    db.collection('dogs').doc(dogId).update({\n      name: dogname,\n      breed: breed,\n      age: age,\n      color: color,\n      gender: gender,\n      weight: weight,\n      dogTag: dogTag,\n      bio: bio,\n      dogId: dogId,\n      followers: [],\n      following: [],\n      photo: photo\n      \n    })\n    } catch(e) {\n      console.log(\"inside update dog error\")\n    alert(e)\n    }\n  }\n  }\n\nexport const updatePosts = () => {\n\n  return async ( dispatch, getState )  => {\n    const {id,postPhoto,postDescription,postLocation,dogId,photo,dogTag,dog,likes,comments,date} = getState().post\n    try {\n      //const {dog} = getState()\n    db.collection('posts').doc(id).update({\n        id: id,\n\t\t\t\tpostPhoto: postPhoto,\n\t\t\t\tpostDescription: postDescription,\n\t\t\t\tpostLocation: postLocation,\n\t\t\t\tdogId: dogId,\n\t\t\t\tphoto: photo,\n        dogTag: dogTag,\n        dog: dog,\n\t\t\t\tlikes: likes,\n        comments: comments,\n        date: date,\n      \n    })\n    } catch(e) {\n      console.log(\"post update error\")\n    alert(e)\n    }\n  }\n\n}\n\nexport const uploadPost = (isVideo,thumbnail) => {\n  console.log(\"thumb: \"+thumbnail)\n\treturn async (dispatch, getState) => {\n    const { post,dog} = getState()\n\t\ttry {\n      const id = uuid.v4()\n      const dogQuery = await db.collection('dogs').doc(dog.dogId).get()\n      let dog1 = dogQuery.data()\n\t\t\tconst upload = {\n\t\t\t\tid: id,\n\t\t\t\tpostPhoto: post.photo,\n\t\t\t\tpostDescription: post.description || ' ',\n\t\t\t\tpostLocation: post.location || ' ',\n\t\t\t\tdogId: dog1.dogId,\n\t\t\t\tphoto: dog1.photo || ' ',\n        dogTag: dog1.dogTag,\n        dog: dog1,\n\t\t\t\tlikes: [],\n        comments: [],\n        flagged: 'no',\n        date: new Date().getTime(),\n        isVideo: isVideo,\n        thumbnail: thumbnail\n\t\t\t}\n      db.collection('posts').doc(id).set(upload)\n      dispatch(getPosts())\n      dispatch(getDog(dog.dogId,'DOGLOGIN'))\n      dispatch({type: 'POST_PAGE', payload: 'true' })\n      //dispatch(getDog(dog.dogId,'GET_DOGPROFILE'))\n      \n\t\t} catch (e) {\n\t\t\tconsole.error(e)\n\t\t}\n\t}\n}\n\nexport const deletePost = (post) => {\n\n  return async (dispatch, getState) => {\n    const {dog} = getState()\n\n    let desertRef = firebase.storage().refFromURL(post.postPhoto)\n    console.log(\"ref: \"+ desertRef)\n    db.collection('posts').doc(post.id).delete()\n\n    desertRef.delete().then(function() {\n      // File deleted successfully\n    }).catch(function(error) {\n      // Uh-oh, an error occurred!\n    });\n    dispatch(getPosts())\n    dispatch(getDog(dog.dogId,'DOGLOGIN'))\n  }\n}\n\nexport const getPosts = (dog) => {\n  return async (dispatch, getState) => {\n   \n    const { dogId, dogTag, photo } = getState().dog\n   \n    \n\t\ttry {\n     \n      const posts = await db.collection('posts').get()\n\n      let rest\n      \n\t\t\t\n\t\t\tlet array = []\n\t\t\tposts.forEach((post)=>{\n       //if(dog.blocked.include(post.id)!=true)\n\t\t\t\tarray.push(post.data())\n\t\t\t})\n      dispatch({type: 'GET_POSTS',  payload: orderBy(array, 'date','desc')})\n\t\t} catch (e) {\n\t\t\talert(e)\n    }\n    \n  }\n\n}\n\nexport const flagPost = (postId) => {\n  return async ()  => {\n    try {\n      //const {dog} = getState()\n    db.collection('posts').doc(postId).update({\n        flagged: 'yes'\n      \n    })\n    } catch(e) {\n      console.log(\"flag post error\")\n    alert(e)\n    }\n  }\n\n}\n\nexport const getPost = (id) => {\n  return async (dispatch, getState) => {\n\t\ttry {\n      console.log(\"post id: \"+id)\n      const posts = await db.collection('posts').where('id', '==', id).get()\n      \n     \n\t\t\t\n\t\t\tlet array = []\n\t\t\tposts.forEach((post)=>{\n\n        console.log(\"posIDS: \"+post.data())\n\t\t\t\tarray.push(post.data())\n      })\n      \n     \n\t\t\tdispatch({type: 'GET_POST', payload: array})\n\t\t} catch (e) {\n\t\t\talert(e)\n    }\n    \n  }\n\n}\n\nexport const getBreedPosts = (breed) => {\n  return async (dispatch, getState) => {\n\t\ttry {\n\t\t\tconst posts = await db.collection('posts').where('dog.breed', '==', breed).get()\n\t\t\t\n\t\t\tlet array = []\n\t\t\tposts.forEach((post)=>{\n\t\t\t\tarray.push(post.data())\n      })\n\t\t\tdispatch({type: 'GET_DOGPOSTS', payload: array})\n\t\t} catch (e) {\n\t\t\talert(e)\n    }\n    \n  }\n\n}\n\nexport const getColorPosts = (color) => {\n  return async (dispatch, getState) => {\n\t\ttry {\n\t\t\tconst posts = await db.collection('posts').where('dog.color', '==', color).get()\n\t\t\t\n\t\t\tlet array = []\n\t\t\tposts.forEach((post)=>{\n\t\t\t\tarray.push(post.data())\n      })\n      let res = JSON.stringify(array)\n\t\t\tdispatch({type: 'GET_DOGPOSTS', payload: array})\n\t\t} catch (e) {\n\t\t\talert(e)\n    }\n    \n  }\n\n}\n\nexport const getGenderPosts = (gender) => {\n  return async (dispatch, getState) => {\n\t\ttry {\n\t\t\tconst posts = await db.collection('posts').where('dog.gender', '==', gender).get()\n\t\t\t\n\t\t\tlet array = []\n\t\t\tposts.forEach((post)=>{\n\t\t\t\tarray.push(post.data())\n      })\n      let res = JSON.stringify(array)\n\t\t\tdispatch({type: 'GET_DOGPOSTS', payload: array})\n\t\t} catch (e) {\n\t\t\talert(e)\n    }\n    \n  }\n\n}\n\nexport const getWeightPosts = (firstWeight,secondWeight) => {\n  return async (dispatch, getState) => {\n\t\ttry {\n\t\t\tconst posts = await db.collection('posts').where('dog.weight', '>=', firstWeight).where('dog.weight', '<=', secondWeight).get()\n\t\t\t\n\t\t\tlet array = []\n\t\t\tposts.forEach((post)=>{\n\t\t\t\tarray.push(post.data())\n      })\n      let res = JSON.stringify(array)\n\t\t\tdispatch({type: 'GET_DOGPOSTS', payload: array})\n\t\t} catch (e) {\n\t\t\talert(e)\n    }\n    \n  }\n}\n\nexport const getAgePosts = (firstAge,secondAge) => {\n  return async (dispatch, getState) => {\n\t\ttry {\n\t\t\tconst posts = await db.collection('posts').where('dog.age', '>=', firstAge).where('dog.age', '<=', secondAge).get()\n\t\t\t\n\t\t\tlet array = []\n\t\t\tposts.forEach((post)=>{\n\t\t\t\tarray.push(post.data())\n      })\n      let res = JSON.stringify(array)\n\t\t\tdispatch({type: 'GET_DOGPOSTS', payload: array})\n\t\t} catch (e) {\n\t\t\talert(e)\n    }\n    \n  }\n}\n\nexport const getlocationPosts = (city,state,country) => {\n\n  \n    \n  return async (dispatch, getState) => {\n\t\ttry {\n      let posts = []\n\n      if(country===\"United States\"){\n\n        const postsQuery = await db.collection('posts').where('postLocation.state', '==', state).get()\n        postsQuery.forEach(function(response) {\n        posts.push(response.data())\n\t\t\t})\n\t\t\tdispatch({type: 'GET_EXPLOREPOSTS', payload: posts})\n\n      }\n\n      else{\n        const postsQuery = await db.collection('posts').where('postLocation.country', '==', country).get()\n        postsQuery.forEach(function(response) {\n        posts.push(response.data())\n\t\t\t})\n\t\t\tdispatch({type: 'GET_EXPLOREPOSTS', payload: posts})\n      }\n      \n\t\t} catch (e) {\n      console.log(\"in get posts\");\n\t\t\talert(e)\n    }\n\n  }\n\t\n}\n\nexport const likePost = (post) => {\n  return (dispatch, getState) => {\n    const { dogId, dogTag, photo } = getState().dog\n    try {\n      // const home = cloneDeep(getState().post.feed)\n      // let newFeed = home.map(item => {\n      //   if(item.id === post.id){\n      //     item.likes.push(uid)\n      //   } return item\n      // })\n      db.collection('posts').doc(post.id).update({\n        likes: firebase.firestore.FieldValue.arrayUnion(dogId)\n      })\n      db.collection('activity').doc().set({\n        postId: post.id,\n        postPhoto: post.postPhoto,\n        likerId: dogId,\n        likerPhoto: photo,\n        likerName: dogTag,\n        dogId: post.dogId,\n        date: new Date().getTime(),\n        type: 'LIKE',\n        thumbnail: post.thumbnail,\n        isVideo: post.isVideo\n      })\n      dispatch(sendNotification(post.dog.uid, 'Licked Your Photo'))\n     // dispatch({type: 'GET_POSTS', payload: newFeed})\n      dispatch(getPosts())\n    } catch(e) {\n      console.error(e)\n    }\n  }\n}\n\nexport const unlikePost = (post) => {\n  return async (dispatch, getState) => {\n    const { dogId } = getState().dog\n    try {\n      db.collection('posts').doc(post.id).update({\n        likes: firebase.firestore.FieldValue.arrayRemove(dogId)\n      })\n      const query = await db.collection('activity').where('postId', '==', post.id).where('likerId', '==', dogId).get()\n      query.forEach((response) => {\n        response.ref.delete()\n      })\n      dispatch(getPosts())\n    } catch(e) {\n      console.error(e)\n    }\n  }\n}\n\nexport const getComments = (post) => {\n  return dispatch => {\n    dispatch({ type: 'GET_COMMENTS', payload: orderBy(post.comments, 'date','desc') })\n  }\n}\n\nexport const addComment = (text, post) => {\n  return (dispatch, getState) => {\n    const { dogId, photo, dogTag } = getState().dog\n    let comments = cloneDeep(getState().post.comments.reverse())\n    try {\n      const comment = {\n        comment: text,\n        commenterId: dogId,\n        commenterPhoto: photo || '',\n        commenterName: dogTag,\n        date: new Date().getTime(),\n      }\n      db.collection('posts').doc(post.id).update({\n        comments: firebase.firestore.FieldValue.arrayUnion(comment)\n      })\n      comment.postId = post.id\n      comment.postPhoto = post.postPhoto\n      comment.dogId = post.dogId\n      comment.type = 'COMMENT'\n      comments.push(comment)\n      dispatch({ type: 'GET_COMMENTS', payload: comments.reverse() })\n\n      //dispatch(sendNotification(post.dogId, text))\n      db.collection('activity').doc().set(comment)\n    } catch(e) {\n      console.error(e)\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ followUser, unfollowUser,getDog,getUser }, dispatch)\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    post: state.post,\n    user: state.user,\n    userprofile: state.profile,\n    dog: state.dog\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)\n"]},"metadata":{},"sourceType":"module"}