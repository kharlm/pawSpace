{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/kharl/pawSpace/node_modules/react-native-confetti-cannon/src/index.js\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Confetti from \"./components/confetti\";\nimport { randomValue } from \"./utils\";\nvar TOP_MIN = 0.7;\nvar DEFAULT_COLORS = ['#e67e22', '#2ecc71', '#3498db', '#84AAC2', '#E6D68D', '#F67933', '#42A858', '#4F50A2', '#A86BB7', '#e74c3c', '#1abc9c'];\n\nvar Explosion = function (_React$PureComponent) {\n  _inherits(Explosion, _React$PureComponent);\n\n  function Explosion() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Explosion);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Explosion)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.animation = new Animated.Value(0);\n\n    _this.componentDidMount = function () {\n      _this.calculateItems();\n    };\n\n    _this.calculateItems = function () {\n      var count = _this.props.count;\n      var items = [];\n      Array(count).fill().map(function () {\n        var item = {\n          leftDelta: randomValue(0, 1),\n          topDelta: randomValue(TOP_MIN, 1),\n          swingDelta: randomValue(0.2, 1),\n          speedDelta: {\n            rotateX: randomValue(0.3, 1),\n            rotateY: randomValue(0.3, 1),\n            rotateZ: randomValue(0.3, 1)\n          }\n        };\n        items.push(item);\n      });\n\n      _this.setState({\n        items: items\n      }, function () {\n        return _this.animate();\n      });\n    };\n\n    _this.animate = function () {\n      var _this$props = _this.props,\n          _this$props$explosion = _this$props.explosionSpeed,\n          explosionSpeed = _this$props$explosion === void 0 ? 350 : _this$props$explosion,\n          _this$props$fallSpeed = _this$props.fallSpeed,\n          fallSpeed = _this$props$fallSpeed === void 0 ? 3000 : _this$props$fallSpeed;\n      Animated.sequence([Animated.timing(_this.animation, {\n        toValue: 0,\n        duration: 0\n      }), Animated.timing(_this.animation, {\n        toValue: 1,\n        duration: explosionSpeed,\n        easing: Easing.out(Easing.quad)\n      }), Animated.timing(_this.animation, {\n        toValue: 2,\n        duration: fallSpeed,\n        easing: Easing.quad\n      })]).start();\n    };\n\n    return _this;\n  }\n\n  _createClass(Explosion, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          origin = _this$props2.origin,\n          _this$props2$colors = _this$props2.colors,\n          colors = _this$props2$colors === void 0 ? DEFAULT_COLORS : _this$props2$colors,\n          fadeOut = _this$props2.fadeOut;\n\n      var _Dimensions$get = Dimensions.get('window'),\n          height = _Dimensions$get.height,\n          width = _Dimensions$get.width;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        }\n      }, this.state && this.state.items && this.state.items.map(function (item, index) {\n        var left = _this2.animation.interpolate({\n          inputRange: [0, 1, 2],\n          outputRange: [origin.x, item.leftDelta * width, item.leftDelta * width]\n        });\n\n        var bottom = _this2.animation.interpolate({\n          inputRange: [0, 1, 1 + item.topDelta, 2],\n          outputRange: [origin.y, item.topDelta * height, 0, 0]\n        });\n\n        var rotateX = _this2.animation.interpolate({\n          inputRange: [0, 2],\n          outputRange: ['0deg', item.speedDelta.rotateX * 360 * 10 + \"deg\"]\n        });\n\n        var rotateY = _this2.animation.interpolate({\n          inputRange: [0, 2],\n          outputRange: ['0deg', item.speedDelta.rotateY * 360 * 5 + \"deg\"]\n        });\n\n        var rotateZ = _this2.animation.interpolate({\n          inputRange: [0, 2],\n          outputRange: ['0deg', item.speedDelta.rotateZ * 360 * 2 + \"deg\"]\n        });\n\n        var translateX = _this2.animation.interpolate({\n          inputRange: [0, 0.4, 1.2, 2],\n          outputRange: [0, -(item.swingDelta * 30), item.swingDelta * 30, 0]\n        });\n\n        var opacity = _this2.animation.interpolate({\n          inputRange: [0, 1, 1.8, 2],\n          outputRange: [1, 1, 1, fadeOut ? 0 : 1]\n        });\n\n        var transform = [{\n          rotateX: rotateX\n        }, {\n          rotateY: rotateY\n        }, {\n          rotateZ: rotateZ\n        }, {\n          translateX: translateX\n        }];\n        return React.createElement(Confetti, {\n          color: colors[Math.round(randomValue(0, colors.length - 1))],\n          left: left,\n          bottom: bottom,\n          transform: transform,\n          opacity: opacity,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          }\n        });\n      }));\n    }\n  }]);\n\n  return Explosion;\n}(React.PureComponent);\n\nexport default Explosion;","map":{"version":3,"sources":["/Users/kharl/pawSpace/node_modules/react-native-confetti-cannon/src/index.js"],"names":["React","Confetti","randomValue","TOP_MIN","DEFAULT_COLORS","Explosion","animation","Animated","Value","componentDidMount","calculateItems","count","props","items","Array","fill","map","item","leftDelta","topDelta","swingDelta","speedDelta","rotateX","rotateY","rotateZ","push","setState","animate","explosionSpeed","fallSpeed","sequence","timing","toValue","duration","easing","Easing","out","quad","start","origin","colors","fadeOut","Dimensions","get","height","width","state","index","left","interpolate","inputRange","outputRange","x","bottom","y","translateX","opacity","transform","Math","round","length","PureComponent"],"mappings":"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","sourcesContent":["// @flow strict\n\nimport * as React from 'react';\nimport { Animated, Dimensions, Easing } from 'react-native';\n\nimport Confetti from './components/confetti';\nimport {randomValue} from './utils';\n\ntype Props = {|\n  count: number,\n  origin: {\n    x: number,\n    y: number\n  },\n  explosionSpeed?: number,\n  fallSpeed?: number,\n  colors?: Array<string>,\n  fadeOut?: boolean\n|};\n\ntype Item = {|\n  leftDelta: number,\n  topDelta: number,\n  swingDelta: number,\n  speedDelta: {\n    rotateX: number,\n    rotateY: number,\n    rotateZ: number\n  }\n|};\n\ntype State = {|\n  items?: Array<Item>\n|};\n\nconst TOP_MIN = 0.7;\nconst DEFAULT_COLORS: Array<string> =[\n  '#e67e22',\n  '#2ecc71',\n  '#3498db',\n  '#84AAC2',\n  '#E6D68D',\n  '#F67933',\n  '#42A858',\n  '#4F50A2',\n  '#A86BB7',\n  '#e74c3c',\n  '#1abc9c'\n];\n\nclass Explosion extends React.PureComponent<Props, State> {\n  props: Props;\n  state: State;\n\n  animation: Animated.Value = new Animated.Value(0);\n\n  componentDidMount = () => {\n    this.calculateItems();\n  };\n\n  calculateItems = () => {\n    const { count } = this.props;\n    const items: Array<Item> = [];\n\n    Array(count).fill().map(() => {\n      const item: Item = {\n        leftDelta: randomValue(0, 1),\n        topDelta: randomValue(TOP_MIN, 1),\n        swingDelta: randomValue(0.2, 1),\n        speedDelta: {\n          rotateX: randomValue(0.3, 1),\n          rotateY: randomValue(0.3, 1),\n          rotateZ: randomValue(0.3, 1)\n        }\n      };\n      items.push(item);\n    });\n\n    this.setState({\n      items\n    }, () => this.animate());\n  };\n\n  animate = () => {\n    const { explosionSpeed = 350, fallSpeed = 3000 } = this.props;\n\n    Animated.sequence([\n      Animated.timing(this.animation, {toValue: 0, duration: 0}),\n      Animated.timing(this.animation, {\n        toValue: 1,\n        duration: explosionSpeed,\n        easing: Easing.out(Easing.quad)\n      }),\n      Animated.timing(this.animation, {\n        toValue: 2,\n        duration: fallSpeed,\n        easing: Easing.quad\n      }),\n    ]).start();\n  };\n\n  render() {\n    const { origin, colors = DEFAULT_COLORS, fadeOut } = this.props;\n    const { height, width } = Dimensions.get('window');\n\n    return (\n      <React.Fragment>\n        {this.state && this.state.items && this.state.items.map((item: Item, index: number) => {\n          const left = this.animation.interpolate({\n            inputRange: [0, 1, 2],\n            outputRange: [origin.x, item.leftDelta * width, item.leftDelta * width]\n          });\n          const bottom = this.animation.interpolate({\n            inputRange: [0, 1, 1 + item.topDelta, 2],\n            outputRange: [origin.y, item.topDelta * height, 0, 0]\n          });\n          const rotateX = this.animation.interpolate({\n            inputRange: [0, 2],\n            outputRange: ['0deg', `${item.speedDelta.rotateX * 360 * 10}deg`]\n          });\n          const rotateY = this.animation.interpolate({\n            inputRange: [0, 2],\n            outputRange: ['0deg', `${item.speedDelta.rotateY * 360 * 5}deg`]\n          });\n          const rotateZ = this.animation.interpolate({\n            inputRange: [0, 2],\n            outputRange: ['0deg', `${item.speedDelta.rotateZ * 360 * 2}deg`]\n          });\n          const translateX = this.animation.interpolate({\n            inputRange: [0, 0.4, 1.2, 2],\n            outputRange: [0, -(item.swingDelta * 30), (item.swingDelta * 30), 0]\n          });\n          const opacity = this.animation.interpolate({\n            inputRange: [0, 1, 1.8, 2],\n            outputRange: [1, 1, 1, fadeOut ? 0 : 1]\n          });\n          const transform = [{rotateX}, {rotateY}, {rotateZ}, {translateX}];\n\n          return (\n            <Confetti color={colors[Math.round(randomValue(0, colors.length - 1))]} left={left} bottom={bottom} transform={transform} opacity={opacity} key={index} />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Explosion;\n"]},"metadata":{},"sourceType":"module"}