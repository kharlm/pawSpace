{"ast":null,"code":"var _jsxFileName = \"/Users/kharl/pawSpace/node_modules/react-native-material-cards/src/utils/Touchable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { IS_ANDROID, IS_LT_LOLLIPOP, noop } from \"./constants\";\n\nvar Touchable = function Touchable(_ref) {\n  var onPress = _ref.onPress,\n      style = _ref.style,\n      children = _ref.children,\n      useForeground = _ref.useForeground;\n\n  if (IS_ANDROID && !IS_LT_LOLLIPOP) {\n    return React.createElement(TouchableNativeFeedback, {\n      background: TouchableNativeFeedback.SelectableBackground(),\n      useForeground: useForeground,\n      onPress: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      }\n    }, React.createElement(View, {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      }\n    }, children));\n  }\n\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    }\n  }, children);\n};\n\nTouchable.propTypes = {\n  onPress: PropTypes.func,\n  style: ViewPropTypes.style,\n  useForeground: PropTypes.bool,\n  children: PropTypes.node.isRequired\n};\nTouchable.defaultProps = {\n  onPress: noop,\n  style: {},\n  useForeground: false\n};\nexport default Touchable;","map":{"version":3,"sources":["/Users/kharl/pawSpace/node_modules/react-native-material-cards/src/utils/Touchable.js"],"names":["React","PropTypes","IS_ANDROID","IS_LT_LOLLIPOP","noop","Touchable","onPress","style","children","useForeground","TouchableNativeFeedback","SelectableBackground","propTypes","func","ViewPropTypes","bool","node","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AAOA,SACEC,UADF,EAEEC,cAFF,EAGEC,IAHF;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAKZ;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,aACI,QADJA,aACI;;AACJ,MAAIP,UAAU,IAAI,CAACC,cAAnB,EAAmC;AACjC,WACE,oBAAC,uBAAD;AACE,MAAA,UAAU,EAAEO,uBAAuB,CAACC,oBAAxB,EADd;AAEE,MAAA,aAAa,EAAEF,aAFjB;AAGE,MAAA,OAAO,EAAEH,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAEC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGC,QAHH,CALF,CADF;AAaD;;AAED,SACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAEF,OADX;AAEE,IAAA,KAAK,EAAEC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGC,QAJH,CADF;AAQD,CA9BD;;AAgCAH,SAAS,CAACO,SAAV,GAAsB;AACpBN,EAAAA,OAAO,EAAEL,SAAS,CAACY,IADC;AAEpBN,EAAAA,KAAK,EAAEO,aAAa,CAACP,KAFD;AAGpBE,EAAAA,aAAa,EAAER,SAAS,CAACc,IAHL;AAIpBP,EAAAA,QAAQ,EAAEP,SAAS,CAACe,IAAV,CAAeC;AAJL,CAAtB;AAOAZ,SAAS,CAACa,YAAV,GAAyB;AACvBZ,EAAAA,OAAO,EAAEF,IADc;AAEvBG,EAAAA,KAAK,EAAE,EAFgB;AAGvBE,EAAAA,aAAa,EAAE;AAHQ,CAAzB;AAMA,eAAeJ,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ViewPropTypes,\n  TouchableOpacity,\n  TouchableNativeFeedback,\n  View,\n} from 'react-native';\nimport {\n  IS_ANDROID,\n  IS_LT_LOLLIPOP,\n  noop,\n} from './constants';\n\nconst Touchable = ({\n  onPress,\n  style,\n  children,\n  useForeground,\n}) => {\n  if (IS_ANDROID && !IS_LT_LOLLIPOP) {\n    return (\n      <TouchableNativeFeedback\n        background={TouchableNativeFeedback.SelectableBackground()}\n        useForeground={useForeground}\n        onPress={onPress}\n      >\n        <View\n          style={style}\n        >\n          {children}\n        </View>\n      </TouchableNativeFeedback>\n    );\n  }\n\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={style}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\nTouchable.propTypes = {\n  onPress: PropTypes.func,\n  style: ViewPropTypes.style,\n  useForeground: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nTouchable.defaultProps = {\n  onPress: noop,\n  style: {},\n  useForeground: false,\n};\n\nexport default Touchable;\n"]},"metadata":{},"sourceType":"module"}