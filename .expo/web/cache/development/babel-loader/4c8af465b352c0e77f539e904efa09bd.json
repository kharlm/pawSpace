{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/kharl/pawSpace/node_modules/react-native-material-cards/src/Card.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Touchable } from \"./utils\";\n\nvar TouchableIfOnPress = function TouchableIfOnPress(_ref) {\n  var onPress = _ref.onPress,\n      children = _ref.children;\n\n  if (onPress === undefined) {\n    return children;\n  }\n\n  return React.createElement(Touchable, {\n    useForeground: true,\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    }\n  }, children);\n};\n\nvar Card = function (_Component) {\n  _inherits(Card, _Component);\n\n  function Card(props) {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Card).call(this, props));\n    _this.state = {\n      calcOffsetHeight: 0\n    };\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this2 = this;\n\n      var returnChildren = this.props.children;\n\n      if (returnChildren.length > 0 && returnChildren[0].type.name === 'CardTitle') {\n        returnChildren = React.Children.map(returnChildren, function (child) {\n          if (child.type.name === 'CardTitle') {\n            return React.cloneElement(child, {\n              style: _objectSpread({}, child.props.style, {\n                paddingTop: 24\n              })\n            });\n          }\n\n          return child;\n        });\n      }\n\n      if (returnChildren.length > 0 && returnChildren[0].type.name === 'CardImage') {\n        returnChildren = React.Children.map(returnChildren, function (child) {\n          if (child.type.name === 'CardImage') {\n            return React.cloneElement(child, {\n              style: _objectSpread({}, child.props.style, {\n                borderTopLeftRadius: 2,\n                borderTopRightRadius: 2\n              })\n            });\n          }\n\n          return child;\n        });\n      }\n\n      if (returnChildren.length >= 2 && returnChildren.map(function (child) {\n        return child.type.name;\n      }).join('').includes('CardImageCardTitle')) {\n        returnChildren = React.Children.map(returnChildren, function (child) {\n          if (child.type.name === 'CardImage') {\n            return React.cloneElement(child, {\n              style: _objectSpread({}, child.props.style, {\n                marginBottom: 0\n              })\n            });\n          }\n\n          return child;\n        });\n      }\n\n      if (returnChildren.length >= 2 && returnChildren.map(function (child) {\n        return child.type.name;\n      }).join('').includes('CardImageCardAction')) {\n        returnChildren = React.Children.map(returnChildren, function (child) {\n          if (child.type.name === 'CardImage') {\n            return React.cloneElement(child, {\n              style: _objectSpread({}, child.props.style, {\n                marginBottom: 0\n              })\n            });\n          }\n\n          return child;\n        });\n      }\n\n      if (this.props.avatarSource !== undefined && (returnChildren.map(function (child) {\n        return child.type.name;\n      }).includes('CardTitle') || returnChildren.map(function (child) {\n        return child.type.name;\n      }).includes('CardContent'))) {\n        var titleIndex = returnChildren.map(function (child) {\n          return child.type.name;\n        }).indexOf('CardTitle');\n        var contentIndex = returnChildren.map(function (child) {\n          return child.type.name;\n        }).indexOf('CardContent');\n        var toIndex;\n\n        if (titleIndex === -1) {\n          toIndex = contentIndex;\n        } else if (contentIndex === -1) {\n          toIndex = titleIndex;\n        } else {\n          toIndex = titleIndex > contentIndex ? contentIndex : titleIndex;\n        }\n\n        returnChildren = React.Children.map(returnChildren, function (child, index) {\n          if (index === toIndex) {\n            return React.cloneElement(child, {\n              avatarSource: _this2.props.avatarSource\n            });\n          }\n\n          return child;\n        });\n      }\n\n      if (this.props.mediaSource !== undefined || this.props.isDark) {\n        returnChildren = React.Children.map(returnChildren, function (child) {\n          if (child.type.name === 'CardContent' || child.type.name === 'CardTitle' || child.type.name === 'CardAction') {\n            return React.cloneElement(child, {\n              isDark: true\n            });\n          }\n\n          return child;\n        });\n      }\n\n      return returnChildren;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var newStyle = this.props.style || {};\n\n      if (this.props.mediaSource !== undefined) {\n        return React.createElement(TouchableIfOnPress, {\n          onPress: this.props.onPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          }\n        }, React.createElement(View, {\n          style: [styles.mediaContainer, styles.mediaCard, newStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          }\n        }, React.createElement(Image, {\n          source: this.props.mediaSource,\n          resizeMode: \"stretch\",\n          resizeMethod: \"resize\",\n          style: [StyleSheet.absoluteFill, styles.media],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          }\n        }), React.createElement(View, {\n          style: [styles.mediaInsetContainer, {\n            marginTop: this.state.calcOffsetHeight\n          }],\n          onLayout: function onLayout(e) {\n            return _this3.setState({\n              calcOffsetHeight: e.nativeEvent.layout.width - e.nativeEvent.layout.height\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          }\n        }, this.renderChildren())));\n      }\n\n      return React.createElement(TouchableIfOnPress, {\n        onPress: this.props.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        }\n      }, React.createElement(View, {\n        style: [styles.container, styles.card, newStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        }\n      }, this.renderChildren()));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\nexport { Card as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    backgroundColor: '#F5FCFF',\n    justifyContent: 'flex-start',\n    margin: 5,\n    overflow: 'hidden'\n  },\n  mediaContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    justifyContent: 'flex-start',\n    margin: 5,\n    overflow: 'hidden'\n  },\n  mediaInsetContainer: {\n    backgroundColor: '#00000070',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    justifyContent: 'flex-end',\n    borderBottomLeftRadius: 2,\n    borderBottomRightRadius: 2\n  },\n  media: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    flex: 1,\n    alignSelf: 'stretch'\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 2,\n    shadowColor: '#000000',\n    shadowOpacity: 0.3,\n    shadowRadius: 1,\n    shadowOffset: {\n      height: 1,\n      width: 0.3\n    }\n  },\n  mediaCard: {\n    borderRadius: 2,\n    shadowColor: '#000000',\n    shadowOpacity: 0.3,\n    shadowRadius: 1,\n    shadowOffset: {\n      height: 1,\n      width: 0.3\n    }\n  }\n});","map":{"version":3,"sources":["/Users/kharl/pawSpace/node_modules/react-native-material-cards/src/Card.js"],"names":["React","Component","Touchable","TouchableIfOnPress","onPress","children","undefined","Card","props","state","calcOffsetHeight","returnChildren","length","type","name","Children","map","child","cloneElement","style","paddingTop","borderTopLeftRadius","borderTopRightRadius","join","includes","marginBottom","avatarSource","titleIndex","indexOf","contentIndex","toIndex","index","mediaSource","isDark","newStyle","styles","mediaContainer","mediaCard","StyleSheet","absoluteFill","media","mediaInsetContainer","marginTop","e","setState","nativeEvent","layout","width","height","renderChildren","container","card","create","flex","flexDirection","alignItems","backgroundColor","justifyContent","margin","overflow","borderBottomLeftRadius","borderBottomRightRadius","position","top","left","alignSelf","borderRadius","shadowColor","shadowOpacity","shadowRadius","shadowOffset"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Image,\n} from 'react-native';\nimport { Touchable } from './utils';\n\nconst TouchableIfOnPress = ({ onPress, children }) => {\n  if (onPress === undefined) {\n    return children;\n  }\n\n  return (\n    <Touchable\n      useForeground\n      onPress={onPress}\n    >\n      {children}\n    </Touchable>\n  );\n};\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calcOffsetHeight: 0,\n    };\n  }\n\n  renderChildren() {\n    let returnChildren = this.props.children;\n    // If cardTitle is first component in Card, add 24 padding at top\n    if (returnChildren.length > 0 && returnChildren[0].type.name === 'CardTitle') {\n      returnChildren = React.Children.map(returnChildren, (child) => {\n        if (child.type.name === 'CardTitle') {\n          return React.cloneElement(child, {\n            style: { ...child.props.style, paddingTop: 24 },\n          });\n        }\n\n        return child;\n      });\n    }\n    // If cardImage is first component in Card, set borderRadius for top edges\n    if (returnChildren.length > 0 && returnChildren[0].type.name === 'CardImage') {\n      returnChildren = React.Children.map(returnChildren, (child) => {\n        if (child.type.name === 'CardImage') {\n          return React.cloneElement(child, {\n            style: { ...child.props.style, borderTopLeftRadius: 2, borderTopRightRadius: 2 },\n          });\n        }\n\n        return child;\n      });\n    }\n    // If cardTitle comes after cardImage, remove bottom padding from cardImage\n    if (returnChildren.length >= 2 && returnChildren.map(child => child.type.name).join('').includes('CardImageCardTitle')) {\n      returnChildren = React.Children.map(returnChildren, (child) => {\n        if (child.type.name === 'CardImage') {\n          return React.cloneElement(child, {\n            style: { ...child.props.style, marginBottom: 0 },\n          });\n        }\n\n        return child;\n      });\n    }\n    // If cardAction comes after cardImage, remove bottom padding from cardImage\n    if (returnChildren.length >= 2 && returnChildren.map(child => child.type.name).join('').includes('CardImageCardAction')) {\n      returnChildren = React.Children.map(returnChildren, (child) => {\n        if (child.type.name === 'CardImage') {\n          return React.cloneElement(child, {\n            style: { ...child.props.style, marginBottom: 0 },\n          });\n        }\n\n        return child;\n      });\n    }\n    // If avatarSource is supplied to Card,\n    // pass it to first of whoever comes amongst cardTitle and cardContent\n    if (this.props.avatarSource !== undefined && (returnChildren.map(child => child.type.name).includes('CardTitle') || returnChildren.map(child => child.type.name).includes('CardContent'))) {\n      const titleIndex = returnChildren.map(child => child.type.name).indexOf('CardTitle');\n      const contentIndex = returnChildren.map(child => child.type.name).indexOf('CardContent');\n      let toIndex;\n      if (titleIndex === -1) {\n        toIndex = contentIndex;\n      } else if (contentIndex === -1) {\n        toIndex = titleIndex;\n      } else {\n        toIndex = titleIndex > contentIndex ? contentIndex : titleIndex;\n      }\n      returnChildren = React.Children.map(returnChildren, (child, index) => {\n        if (index === toIndex) {\n          return React.cloneElement(child, {\n            avatarSource: this.props.avatarSource,\n          });\n        }\n\n        return child;\n      });\n    }\n    // If mediaSource or isDark(true) is supplied to Card, pass isDark is true to children\n    if (this.props.mediaSource !== undefined || this.props.isDark) {\n      returnChildren = React.Children.map(returnChildren, (child) => {\n        if (child.type.name === 'CardContent' || child.type.name === 'CardTitle' || child.type.name === 'CardAction') {\n          return React.cloneElement(child, { isDark: true });\n        }\n\n        return child;\n      });\n    }\n\n    return returnChildren;\n  }\n\n  render() {\n    const newStyle = this.props.style || {};\n    if (this.props.mediaSource !== undefined) {\n      return (\n        <TouchableIfOnPress onPress={this.props.onPress}>\n          <View style={[styles.mediaContainer, styles.mediaCard, newStyle]}>\n            <Image\n              source={this.props.mediaSource}\n              resizeMode=\"stretch\"\n              resizeMethod=\"resize\"\n              style={[StyleSheet.absoluteFill, styles.media]}\n            />\n            <View\n              style={[\n                styles.mediaInsetContainer,\n                { marginTop: this.state.calcOffsetHeight },\n              ]}\n              onLayout={e => this.setState({\n                calcOffsetHeight: e.nativeEvent.layout.width - e.nativeEvent.layout.height,\n              })}\n            >\n              {this.renderChildren()}\n            </View>\n          </View>\n        </TouchableIfOnPress>\n      );\n    }\n\n    return (\n      <TouchableIfOnPress onPress={this.props.onPress}>\n        <View style={[styles.container, styles.card, newStyle]}>\n          {this.renderChildren()}\n        </View>\n      </TouchableIfOnPress>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    backgroundColor: '#F5FCFF',\n    justifyContent: 'flex-start',\n    margin: 5,\n    overflow: 'hidden',\n  },\n  mediaContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    justifyContent: 'flex-start',\n    margin: 5,\n    overflow: 'hidden',\n  },\n  mediaInsetContainer: {\n    backgroundColor: '#00000070',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    justifyContent: 'flex-end',\n    borderBottomLeftRadius: 2,\n    borderBottomRightRadius: 2,\n  },\n  media: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    flex: 1,\n    alignSelf: 'stretch',\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 2,\n    shadowColor: '#000000',\n    shadowOpacity: 0.3,\n    shadowRadius: 1,\n    shadowOffset: {\n      height: 1,\n      width: 0.3,\n    },\n  },\n  mediaCard: {\n    borderRadius: 2,\n    shadowColor: '#000000',\n    shadowOpacity: 0.3,\n    shadowRadius: 1,\n    shadowOffset: {\n      height: 1,\n      width: 0.3,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}