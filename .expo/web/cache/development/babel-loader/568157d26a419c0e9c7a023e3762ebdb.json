{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/kharl/pawSpace/node_modules/react-native-material-cards/src/CardAction.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar CardAction = function (_Component) {\n  _inherits(CardAction, _Component);\n\n  function CardAction() {\n    _classCallCheck(this, CardAction);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CardAction).apply(this, arguments));\n  }\n\n  _createClass(CardAction, [{\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var returnChildren = this.props.children;\n\n      if (this.props.inColumn) {\n        returnChildren = React.Children.map(returnChildren, function (child) {\n          if (child.type.name === 'CardButton') {\n            return React.cloneElement(child, {\n              inColumn: true\n            });\n          }\n\n          return child;\n        });\n      }\n\n      return returnChildren;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var newStyle = this.props.style || {};\n      var directionStyle = this.props.inColumn ? styles.cardActionInColumn : styles.cardActionInRow;\n      return React.createElement(View, {\n        style: this.props.separator && !this.props.isDark ? [directionStyle, styles.separatorAddendum, newStyle] : [directionStyle, newStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }, this.renderChildren());\n    }\n  }]);\n\n  return CardAction;\n}(Component);\n\nexport { CardAction as default };\nvar styles = StyleSheet.create({\n  cardActionInRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    alignSelf: 'stretch'\n  },\n  cardActionInColumn: {\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    justifyContent: 'flex-start',\n    alignSelf: 'stretch'\n  },\n  separatorAddendum: {\n    borderTopColor: '#E9E9E9',\n    borderTopWidth: 1\n  }\n});","map":{"version":3,"sources":["/Users/kharl/pawSpace/node_modules/react-native-material-cards/src/CardAction.js"],"names":["React","Component","CardAction","returnChildren","props","children","inColumn","Children","map","child","type","name","cloneElement","newStyle","style","directionStyle","styles","cardActionInColumn","cardActionInRow","separator","isDark","separatorAddendum","renderChildren","StyleSheet","create","flexDirection","alignItems","justifyContent","alignSelf","borderTopColor","borderTopWidth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;IAMqBC,U;;;;;;;;;;;qCACF;AACf,UAAIC,cAAc,GAAG,KAAKC,KAAL,CAAWC,QAAhC;;AACA,UAAI,KAAKD,KAAL,CAAWE,QAAf,EAAyB;AACvBH,QAAAA,cAAc,GAAGH,KAAK,CAACO,QAAN,CAAeC,GAAf,CAAmBL,cAAnB,EAAmC,UAACM,KAAD,EAAW;AAC7D,cAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,KAAoB,YAAxB,EAAsC;AACpC,mBAAOX,KAAK,CAACY,YAAN,CAAmBH,KAAnB,EAA0B;AAC/BH,cAAAA,QAAQ,EAAE;AADqB,aAA1B,CAAP;AAGD;;AAED,iBAAOG,KAAP;AACD,SARgB,CAAjB;AASD;;AACD,aAAON,cAAP;AACD;;;6BAEQ;AACP,UAAMU,QAAQ,GAAG,KAAKT,KAAL,CAAWU,KAAX,IAAoB,EAArC;AACA,UAAMC,cAAc,GAAG,KAAKX,KAAL,CAAWE,QAAX,GAAsBU,MAAM,CAACC,kBAA7B,GAAkDD,MAAM,CAACE,eAAhF;AACA,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWe,SAAX,IAAwB,CAAC,KAAKf,KAAL,CAAWgB,MAApC,GACH,CAACL,cAAD,EAAiBC,MAAM,CAACK,iBAAxB,EAA2CR,QAA3C,CADG,GAEH,CAACE,cAAD,EAAiBF,QAAjB,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,KAAKS,cAAL,EANH,CADF;AAUD;;;;EA9BqCrB,S;;SAAnBC,U;AAiCrB,IAAMc,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,eAAe,EAAE;AACfO,IAAAA,aAAa,EAAE,KADA;AAEfC,IAAAA,UAAU,EAAE,QAFG;AAGfC,IAAAA,cAAc,EAAE,YAHD;AAIfC,IAAAA,SAAS,EAAE;AAJI,GADc;AAO/BX,EAAAA,kBAAkB,EAAE;AAClBQ,IAAAA,aAAa,EAAE,QADG;AAElBC,IAAAA,UAAU,EAAE,SAFM;AAGlBC,IAAAA,cAAc,EAAE,YAHE;AAIlBC,IAAAA,SAAS,EAAE;AAJO,GAPW;AAa/BP,EAAAA,iBAAiB,EAAE;AACjBQ,IAAAA,cAAc,EAAE,SADC;AAEjBC,IAAAA,cAAc,EAAE;AAFC;AAbY,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\n\nexport default class CardAction extends Component {\n  renderChildren() {\n    let returnChildren = this.props.children;\n    if (this.props.inColumn) {\n      returnChildren = React.Children.map(returnChildren, (child) => {\n        if (child.type.name === 'CardButton') {\n          return React.cloneElement(child, {\n            inColumn: true,\n          });\n        }\n\n        return child;\n      });\n    }\n    return returnChildren;\n  }\n\n  render() {\n    const newStyle = this.props.style || {};\n    const directionStyle = this.props.inColumn ? styles.cardActionInColumn : styles.cardActionInRow;\n    return (\n      <View\n        style={this.props.separator && !this.props.isDark\n          ? [directionStyle, styles.separatorAddendum, newStyle]\n          : [directionStyle, newStyle]\n        }\n      >\n        {this.renderChildren()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  cardActionInRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    alignSelf: 'stretch',\n  },\n  cardActionInColumn: {\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    justifyContent: 'flex-start',\n    alignSelf: 'stretch',\n  },\n  separatorAddendum: {\n    borderTopColor: '#E9E9E9',\n    borderTopWidth: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}