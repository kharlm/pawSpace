{"ast":null,"code":"var _jsxFileName = \"/Users/kharl/pawSpace/navigation/TabNavigator.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons, MaterialCommunityIcons, FontAwesome } from '@expo/vector-icons';\nimport { HomeNavigator, SearchNavigator, PostNavigator, ActivityNavigator, ProfileNavigator, ExploreNavigator, MatchNavigator, EssentialsNavigator } from \"./StackNavigator\";\nimport { createBottomTabNavigator, createAppContainer } from 'react-navigation';\n\nvar getScreenRegisteredFunctions = function getScreenRegisteredFunctions(navState) {\n  var routes = navState.routes,\n      index = navState.index,\n      params = navState.params;\n\n  if (navState.hasOwnProperty('index')) {\n    return getScreenRegisteredFunctions(routes[index]);\n  } else {\n      return params;\n    }\n};\n\nvar TabNavigator = createBottomTabNavigator({\n  Home: {\n    screen: HomeNavigator,\n    navigationOptions: {\n      tabBarLabel: ' ',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(MaterialCommunityIcons, {\n          name: focused ? 'home' : 'home-outline',\n          size: 32,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          }\n        });\n      },\n      tabBarOnPress: function tabBarOnPress(_ref2) {\n        var defaultHandler = _ref2.defaultHandler,\n            navigation = _ref2.navigation;\n\n        if (navigation && navigation.isFocused()) {\n          var screenFunctions = getScreenRegisteredFunctions(navigation.state);\n\n          if (screenFunctions && typeof screenFunctions.tapOnTabNavigator === 'function') {\n            screenFunctions.tapOnTabNavigator();\n          }\n        }\n\n        defaultHandler();\n      }\n    }\n  },\n  Search: {\n    screen: SearchNavigator,\n    navigationOptions: {\n      tabBarLabel: ' ',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(Ionicons, {\n          name: focused ? 'md-search' : 'ios-search',\n          size: 32,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          }\n        });\n      }\n    }\n  },\n  Post: {\n    screen: PostNavigator,\n    navigationOptions: {\n      tabBarLabel: ' ',\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(Ionicons, {\n          name: focused ? 'ios-add-circle' : 'ios-add-circle-outline',\n          size: 32,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          }\n        });\n      }\n    }\n  },\n  Match: {\n    screen: MatchNavigator,\n    navigationOptions: {\n      tabBarLabel: ' ',\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(Ionicons, {\n          name: focused ? 'ios-bonfire' : 'md-bonfire',\n          size: 32,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          }\n        });\n      }\n    }\n  },\n  Explore: {\n    screen: ExploreNavigator,\n    navigationOptions: {\n      tabBarLabel: ' ',\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(Ionicons, {\n          name: focused ? 'ios-globe' : 'md-globe',\n          size: 32,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          }\n        });\n      }\n    }\n  },\n  MyProfile: {\n    screen: ProfileNavigator,\n    navigationOptions: {\n      tabBarLabel: ' ',\n      tabBarIcon: function tabBarIcon(_ref7) {\n        var focused = _ref7.focused;\n        return React.createElement(MaterialCommunityIcons, {\n          name: focused ? 'dog' : 'dog',\n          size: 32,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          }\n        });\n      }\n    }\n  }\n}, {\n  tabBarOptions: {\n    style: {\n      backgroundColor: '#fff',\n      paddingVertical: 5,\n      height: 55\n    }\n  }\n});\nexport default createAppContainer(TabNavigator);","map":{"version":3,"sources":["/Users/kharl/pawSpace/navigation/TabNavigator.js"],"names":["React","Ionicons","MaterialCommunityIcons","FontAwesome","HomeNavigator","SearchNavigator","PostNavigator","ActivityNavigator","ProfileNavigator","ExploreNavigator","MatchNavigator","EssentialsNavigator","createBottomTabNavigator","createAppContainer","getScreenRegisteredFunctions","navState","routes","index","params","hasOwnProperty","TabNavigator","Home","screen","navigationOptions","tabBarLabel","tabBarIcon","focused","tabBarOnPress","defaultHandler","navigation","isFocused","screenFunctions","state","tapOnTabNavigator","Search","Post","Match","Explore","MyProfile","tabBarOptions","style","backgroundColor","paddingVertical","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\nimport { Ionicons, MaterialCommunityIcons, FontAwesome } from '@expo/vector-icons';\nimport { HomeNavigator, SearchNavigator, PostNavigator, ActivityNavigator, ProfileNavigator,ExploreNavigator,MatchNavigator,EssentialsNavigator } from './StackNavigator'\nimport { createBottomTabNavigator, createAppContainer } from 'react-navigation';\n\nconst getScreenRegisteredFunctions = navState => {\n  // When we use stack navigators. \n  // Also needed for react-navigation@2\n  const { routes, index, params } = navState;\n\n  if (navState.hasOwnProperty('index')) {\n    return getScreenRegisteredFunctions(routes[index]);\n  }\n  // When we have the final screen params\n  else {\n    return params;\n  }\n}\n\nconst TabNavigator = createBottomTabNavigator(\n  {\n    Home: { \n      screen: HomeNavigator,\n      navigationOptions: {\n        tabBarLabel: ' ',\n        tabBarIcon: ({focused}) => (\n          <MaterialCommunityIcons name={focused ? 'home' : 'home-outline'} size={32} />\n        ) ,\n        tabBarOnPress: ({ defaultHandler,navigation}) => {\n\n          if (navigation && navigation.isFocused()) {\n            const screenFunctions = getScreenRegisteredFunctions(navigation.state);\n  \n            if (screenFunctions && typeof screenFunctions.tapOnTabNavigator === 'function') {\n              screenFunctions.tapOnTabNavigator()\n            }\n          }\n  \n          // Always call defaultHandler()\n          defaultHandler();\n        },\n      } \n    },\n    \n    Search: { \n      screen: SearchNavigator,\n      navigationOptions: {\n        tabBarLabel: ' ',\n        tabBarIcon: ({focused}) => (\n          <Ionicons name={focused ? 'md-search' : 'ios-search'} size={32} />\n        ) \n      }\n    },\n    Post: { \n      screen: PostNavigator,\n      navigationOptions: {\n        tabBarLabel: ' ',\n        tabBarIcon: ({focused}) => (\n          <Ionicons name={focused ? 'ios-add-circle' : 'ios-add-circle-outline'} size={32} />\n        ) \n      }\n    },\n    Match: { \n      screen: MatchNavigator,\n      navigationOptions: {\n        tabBarLabel: ' ',\n        tabBarIcon: ({focused}) => (\n          <Ionicons  name={focused ? 'ios-bonfire' : 'md-bonfire'} size={32} />\n        ) \n      }\n    },\n    /*Essentials: { \n      screen: EssentialsNavigator,\n      navigationOptions: {\n        tabBarLabel: ' ',\n        tabBarIcon: ({focused}) => (\n          <MaterialCommunityIcons name={focused ? 'map-marker' : 'map-marker-outline'} size={32} />\n        ) \n      }\n    },\n    */\n    /*Activity: { \n      screen: ActivityNavigator,\n      navigationOptions: {\n        tabBarLabel: ' ',\n        tabBarIcon: ({focused}) => (\n          <Ionicons name={focused ? 'ios-heart': 'ios-heart-empty'} size={32} />\n        ) \n      }\n    },\n    */\n\n   Explore: { \n      screen: ExploreNavigator,\n      navigationOptions: {\n        tabBarLabel: ' ',\n        tabBarIcon: ({focused}) => (\n          <Ionicons name={focused ? 'ios-globe' : 'md-globe'} size={32} />\n        ) \n      }\n    },\n    \n    MyProfile: { \n      screen: ProfileNavigator,\n      navigationOptions: {\n        tabBarLabel: ' ',\n        tabBarIcon: ({focused}) => (\n          <MaterialCommunityIcons name={focused ? 'dog' : 'dog'} size={32} />\n        ) \n      }\n    }\n  }, \n  { \n    tabBarOptions: {\n      style: {\n        backgroundColor: '#fff',\n        paddingVertical: 5,\n        height: 55\n      }\n    }\n  }\n);\n\nexport default createAppContainer(TabNavigator);"]},"metadata":{},"sourceType":"module"}