{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/kharl/pawSpace/screens/Signup.js\";\nimport React from 'react';\nimport styles from \"../styles\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ImagePicker, Permissions } from 'expo';\nimport firebase from 'firebase';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { updatePhoto, updateEmail, updatePassword, updateUsername, signup, updateUser, signupError } from \"../actions/user\";\nimport { uploadPhoto } from \"../actions\";\nimport { dogsignup } from \"../actions/dog\";\n\nvar Signup = function (_React$Component) {\n  _inherits(Signup, _React$Component);\n\n  function Signup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Signup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onPress = function () {\n      var routeName = _this.props.navigation.state.routeName;\n\n      if (routeName === 'Signup') {\n        _this.props.signup();\n\n        global.foo = \"dogsignup\";\n        firebase.auth().onAuthStateChanged(function (user) {\n          if (user) {\n            if (_this.props.user != null) {\n              _this.props.navigation.navigate('DogSignUp');\n            }\n          }\n        });\n      } else {\n        _this.props.updateUser();\n\n        _this.props.navigation.goBack();\n      }\n    };\n\n    _this.openLibrary = function _callee() {\n      var _await$Permissions$as, status, image, url;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              if (!(status === 'granted')) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n            case 7:\n              image = _context.sent;\n\n              if (image.cancelled) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(_this.props.uploadPhoto(image));\n\n            case 11:\n              url = _context.sent;\n\n              _this.props.updatePhoto(url);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var routeName = this.props.navigation.state.routeName;\n      return React.createElement(View, {\n        style: [styles.container, styles.center],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      }, React.createElement(TextInput, {\n        style: styles.border,\n        editable: routeName === 'Signup' ? true : false,\n        value: this.props.user.email,\n        onChangeText: function onChangeText(input) {\n          return _this2.props.updateEmail(input);\n        },\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      }), React.createElement(TextInput, {\n        style: styles.border,\n        editable: routeName === 'Signup' ? true : false,\n        value: this.props.user.password,\n        onChangeText: function onChangeText(input) {\n          return _this2.props.updatePassword(input);\n        },\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this2.onPress();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        }\n      }, \"Add a Dog\")));\n    }\n  }]);\n\n  return Signup;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updatePhoto: updatePhoto,\n    uploadPhoto: uploadPhoto,\n    updateUser: updateUser,\n    updateEmail: updateEmail,\n    updatePassword: updatePassword,\n    updateUsername: updateUsername,\n    signup: signup,\n    signupError: signupError\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    signupError: state.signupError\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/Users/kharl/pawSpace/screens/Signup.js"],"names":["React","styles","connect","bindActionCreators","ImagePicker","Permissions","firebase","updatePhoto","updateEmail","updatePassword","updateUsername","signup","updateUser","signupError","uploadPhoto","dogsignup","Signup","onPress","routeName","props","navigation","state","global","foo","auth","onAuthStateChanged","user","navigate","goBack","openLibrary","askAsync","CAMERA_ROLL","status","launchImageLibraryAsync","image","cancelled","url","container","center","border","email","input","password","button","Component","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from '../styles'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { ImagePicker, Permissions } from 'expo';\nimport firebase from 'firebase'\nimport { Text, View, TextInput, TouchableOpacity, Image } from 'react-native';\nimport { updatePhoto, updateEmail, updatePassword, updateUsername,signup, updateUser,signupError } from '../actions/user'\nimport { uploadPhoto } from '../actions'\nimport { dogsignup} from '../actions/dog'\n;\n\nclass Signup extends React.Component {\n\n  onPress = () => {\n    const { routeName } = this.props.navigation.state\n    if(routeName === 'Signup'){\n      this.props.signup()\n      global.foo=\"dogsignup\";\n      firebase.auth().onAuthStateChanged((user) => {\n      if(user){\n        if(this.props.user != null){\n         \n        this.props.navigation.navigate('DogSignUp')\n         }\n       }\n     })\n      \n      }\n     else {\n      this.props.updateUser()\n      this.props.navigation.goBack()\n    }\n  }\n\n  openLibrary = async () => {\n    const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL)\n    if (status === 'granted') {\n      const image = await ImagePicker.launchImageLibraryAsync()\n      if(!image.cancelled ){\n        const url = await this.props.uploadPhoto(image)\n        this.props.updatePhoto(url)\n      }\n    }\n  }\n\n\n  render() {\n    const { routeName } = this.props.navigation.state\n    return (\n      <View style={[styles.container, styles.center]}>\n        <TextInput\n          style={styles.border}\n          editable={routeName === 'Signup' ? true : false}\n          value={this.props.user.email}\n          onChangeText={input => this.props.updateEmail(input)}\n          placeholder='Email'\n        />\n        <TextInput\n          style={styles.border}\n          editable={routeName === 'Signup' ? true : false}\n          value={this.props.user.password}\n          onChangeText={input => this.props.updatePassword(input)}\n          placeholder='Password'\n          secureTextEntry={true}\n        />\n      \t<TouchableOpacity style={styles.button} onPress={()=>this.onPress()}>\n      \t\t<Text>Add a Dog</Text>\n      \t</TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ updatePhoto, uploadPhoto, updateUser, updateEmail, updatePassword, updateUsername,signup,signupError }, dispatch)\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    signupError: state.signupError\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)"]},"metadata":{},"sourceType":"module"}