{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/kharl/pawSpace/screens/Activity.js\";\nimport React from 'react';\nimport styles from \"../styles\";\nimport styles1 from \"../styles1\";\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport db from \"../config/firebase\";\nimport orderBy from 'lodash/orderBy';\nimport moment from 'moment';\n\nvar Activity = function (_React$Component) {\n  _inherits(Activity, _React$Component);\n\n  function Activity() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Activity);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Activity)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activity: []\n    };\n\n    _this.componentDidMount = function () {\n      _this.getActivity();\n    };\n\n    _this.getActivity = function _callee() {\n      var activity, query;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              activity = [];\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(db.collection('activity').where('dogId', '==', _this.props.dog.dogId).get());\n\n            case 3:\n              query = _context.sent;\n              query.forEach(function (response) {\n                activity.push(response.data());\n              });\n\n              _this.setState({\n                activity: orderBy(activity, 'date', 'desc')\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.renderList = function (item) {\n      switch (item.type) {\n        case 'LIKE':\n          return React.createElement(View, {\n            style: [styles.row, styles.space],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            }\n          }, React.createElement(Image, {\n            style: styles.roundImage,\n            source: {\n              uri: item.likerPhoto\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            }\n          }), React.createElement(View, {\n            style: [styles.container, styles.left],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            }\n          }, React.createElement(Text, {\n            style: styles.bold,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            }\n          }, item.likerName), item.isVideo === true ? React.createElement(Text, {\n            style: styles.gray,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            }\n          }, \"Licked Your Video\") : React.createElement(Text, {\n            style: styles.gray,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            }\n          }, \"Licked Your photo\"), React.createElement(Text, {\n            style: [styles.gray, styles.small],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            }\n          }, moment(item.date).format('ll'))), item.isVideo === true ? React.createElement(Image, {\n            style: styles.roundImage,\n            source: {\n              uri: item.thumbnail\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            }\n          }) : React.createElement(Image, {\n            style: styles.roundImage,\n            source: {\n              uri: item.postPhoto\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            }\n          }));\n\n        case 'COMMENT':\n          return React.createElement(View, {\n            style: [styles.row, styles.space],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            }\n          }, React.createElement(Image, {\n            style: styles.roundImage,\n            source: {\n              uri: item.commenterPhoto\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            }\n          }), React.createElement(View, {\n            style: [styles.container, styles.left],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            }\n          }, React.createElement(Text, {\n            style: styles.bold,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            }\n          }, item.commenterName), React.createElement(Text, {\n            style: styles.gray,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            }\n          }, item.comment), React.createElement(Text, {\n            style: [styles.gray, styles.small],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            }\n          }, moment(item.date).format('ll'))), item.isVideo === true ? React.createElement(Image, {\n            style: styles.roundImage,\n            source: {\n              uri: item.thumbnail\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            }\n          }) : React.createElement(Image, {\n            style: styles.roundImage,\n            source: {\n              uri: item.postPhoto\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            }\n          }));\n\n        default:\n          null;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Activity, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      }, React.createElement(FlatList, {\n        onRefresh: function onRefresh() {\n          return _this2.getActivity();\n        },\n        refreshing: false,\n        data: this.state.activity,\n        keyExtractor: function keyExtractor(item) {\n          return JSON.stringify(item.date);\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _this2.renderList(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      }));\n    }\n  }]);\n\n  return Activity;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    dog: state.dog\n  };\n};\n\nexport default connect(mapStateToProps)(Activity);","map":{"version":3,"sources":["/Users/kharl/pawSpace/screens/Activity.js"],"names":["React","styles","styles1","connect","db","orderBy","moment","Activity","state","activity","componentDidMount","getActivity","collection","where","props","dog","dogId","get","query","forEach","response","push","data","setState","renderList","item","type","row","space","roundImage","uri","likerPhoto","container","left","bold","likerName","isVideo","gray","small","date","format","thumbnail","postPhoto","commenterPhoto","commenterName","comment","JSON","stringify","Component","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from '../styles'\nimport styles1 from '../styles1'\nimport { connect } from 'react-redux'\nimport { Text, View, FlatList, ActivityIndicator, Image} from 'react-native';\nimport db from '../config/firebase';\nimport orderBy from 'lodash/orderBy'\nimport moment from 'moment'\n\nclass Activity extends React.Component {\n\tstate = {\n\t\tactivity: []\n\t}\n\n  componentDidMount = () => {\n    this.getActivity()\n  }\n\n  getActivity = async () => {\n  \tlet activity = []\n    const query = await db.collection('activity').where('dogId', '==', this.props.dog.dogId).get()\n    query.forEach((response) => {\n      activity.push(response.data())\n    })\n\t\tthis.setState({activity: orderBy(activity, 'date','desc')})\n  }\n\n  renderList = (item) => {\n    switch(item.type) {\n      case 'LIKE':\n        return (         \n          <View style={[styles.row, styles.space]}>\n            <Image style={styles.roundImage} source={{uri: item.likerPhoto}}/>\n            <View style={[styles.container, styles.left]}>\n              <Text style={styles.bold}>{item.likerName}</Text>\n              {item.isVideo===true ?\n              <Text style={styles.gray}>Licked Your Video</Text>:\n              <Text style={styles.gray}>Licked Your photo</Text>}\n              <Text style={[styles.gray, styles.small]}>{moment(item.date).format('ll')}</Text>\n            </View>\n            {\n            item.isVideo===true ?\n            <Image style={styles.roundImage} source={{uri: item.thumbnail}}/> :\n            <Image style={styles.roundImage} source={{uri: item.postPhoto}}/> }\n          </View>\n        )\n      case 'COMMENT':\n        return (         \n          <View style={[styles.row, styles.space]}>\n            <Image style={styles.roundImage} source={{uri: item.commenterPhoto}}/>\n            <View style={[styles.container, styles.left]}>\n              <Text style={styles.bold}>{item.commenterName}</Text>\n              <Text style={styles.gray}>{item.comment}</Text>\n              <Text style={[styles.gray, styles.small]}>{moment(item.date).format('ll')}</Text>\n            </View>\n            {\n            item.isVideo===true ?\n            <Image style={styles.roundImage} source={{uri: item.thumbnail}}/> :\n            <Image style={styles.roundImage} source={{uri: item.postPhoto}}/> }\n          </View>\n        )\n      default: null\n    }\n  }\n\n  render() {\n\n    //CHECK THIS LATER\n  \t//if (this.state.activity.length <= 0 ) return <ActivityIndicator style={styles.container}/>\n    return (\n    \t<View style={styles.container}>\n\t\t\t\t<FlatList\n          onRefresh={() => this.getActivity()}\n          refreshing={false}\n\t\t\t\t  data={this.state.activity}\n\t\t\t\t  keyExtractor={(item) => JSON.stringify(item.date)}\n\t\t\t\t  renderItem={({ item }) => this.renderList(item)} />\n\t\t\t</View>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    dog: state.dog\n  }\n}\n\nexport default connect(mapStateToProps)(Activity)"]},"metadata":{},"sourceType":"module"}