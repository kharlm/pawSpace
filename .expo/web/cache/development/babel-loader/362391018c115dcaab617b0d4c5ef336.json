{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/kharl/pawSpace/node_modules/react-navigation-stack/src/views/BorderlessButton.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { BaseButton } from 'react-native-gesture-handler';\nvar AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nvar BorderlessButton = function (_React$Component) {\n  _inherits(BorderlessButton, _React$Component);\n\n  function BorderlessButton(props) {\n    var _this;\n\n    _classCallCheck(this, BorderlessButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BorderlessButton).call(this, props));\n\n    _this._onActiveStateChange = function (active) {\n      if (Platform.OS !== 'android') {\n        Animated.spring(_this._opacity, {\n          stiffness: 1000,\n          damping: 500,\n          mass: 3,\n          overshootClamping: true,\n          restDisplacementThreshold: 0.01,\n          restSpeedThreshold: 0.01,\n          toValue: active ? _this.props.activeOpacity : 1,\n          useNativeDriver: true\n        }).start();\n      }\n\n      _this.props.onActiveStateChange && _this.props.onActiveStateChange(active);\n    };\n\n    _this._opacity = new Animated.Value(1);\n    return _this;\n  }\n\n  _createClass(BorderlessButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          style = _this$props.style,\n          enabled = _this$props.enabled,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"style\", \"enabled\"]);\n\n      return React.createElement(AnimatedBaseButton, _extends({}, rest, {\n        onActiveStateChange: this._onActiveStateChange,\n        style: [style, Platform.OS === 'ios' && enabled && {\n          opacity: this._opacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      }), children);\n    }\n  }]);\n\n  return BorderlessButton;\n}(React.Component);\n\nBorderlessButton.propTypes = _objectSpread({}, BaseButton.propTypes, {\n  borderless: PropTypes.bool\n});\nBorderlessButton.defaultProps = {\n  activeOpacity: 0.3,\n  borderless: true\n};\nexport { BorderlessButton as default };","map":{"version":3,"sources":["/Users/kharl/pawSpace/node_modules/react-navigation-stack/src/views/BorderlessButton.js"],"names":["React","PropTypes","BaseButton","AnimatedBaseButton","Animated","createAnimatedComponent","BorderlessButton","props","_onActiveStateChange","active","Platform","OS","spring","_opacity","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","toValue","activeOpacity","useNativeDriver","start","onActiveStateChange","Value","children","style","enabled","rest","opacity","Component","propTypes","borderless","bool","defaultProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AAEA,IAAMC,kBAAkB,GAAGC,QAAQ,CAACC,uBAAT,CAAiCH,UAAjC,CAA3B;;IAEqBI,gB;;;AAWnB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;;AADiB,UAKnBC,oBALmB,GAKI,UAAAC,MAAM,EAAI;AAC/B,UAAIC,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7BP,QAAAA,QAAQ,CAACQ,MAAT,CAAgB,MAAKC,QAArB,EAA+B;AAC7BC,UAAAA,SAAS,EAAE,IADkB;AAE7BC,UAAAA,OAAO,EAAE,GAFoB;AAG7BC,UAAAA,IAAI,EAAE,CAHuB;AAI7BC,UAAAA,iBAAiB,EAAE,IAJU;AAK7BC,UAAAA,yBAAyB,EAAE,IALE;AAM7BC,UAAAA,kBAAkB,EAAE,IANS;AAO7BC,UAAAA,OAAO,EAAEX,MAAM,GAAG,MAAKF,KAAL,CAAWc,aAAd,GAA8B,CAPhB;AAQ7BC,UAAAA,eAAe,EAAE;AARY,SAA/B,EASGC,KATH;AAUD;;AAED,YAAKhB,KAAL,CAAWiB,mBAAX,IAAkC,MAAKjB,KAAL,CAAWiB,mBAAX,CAA+Bf,MAA/B,CAAlC;AACD,KApBkB;;AAEjB,UAAKI,QAAL,GAAgB,IAAIT,QAAQ,CAACqB,KAAb,CAAmB,CAAnB,CAAhB;AAFiB;AAGlB;;;;6BAmBQ;AAAA,wBACuC,KAAKlB,KAD5C;AAAA,UACCmB,QADD,eACCA,QADD;AAAA,UACWC,KADX,eACWA,KADX;AAAA,UACkBC,OADlB,eACkBA,OADlB;AAAA,UAC8BC,IAD9B;;AAGP,aACE,oBAAC,kBAAD,eACMA,IADN;AAEE,QAAA,mBAAmB,EAAE,KAAKrB,oBAF5B;AAGE,QAAA,KAAK,EAAE,CACLmB,KADK,EAELjB,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyBiB,OAAzB,IAAoC;AAAEE,UAAAA,OAAO,EAAE,KAAKjB;AAAhB,SAF/B,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA,UAQGa,QARH,CADF;AAYD;;;;EAhD2C1B,KAAK,CAAC+B,S;;AAA/BzB,gB,CACZ0B,S,qBACF9B,UAAU,CAAC8B,S;AACdC,EAAAA,UAAU,EAAEhC,SAAS,CAACiC;;AAHL5B,gB,CAMZ6B,Y,GAAe;AACpBd,EAAAA,aAAa,EAAE,GADK;AAEpBY,EAAAA,UAAU,EAAE;AAFQ,C;SANH3B,gB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, Platform } from 'react-native';\nimport { BaseButton } from 'react-native-gesture-handler';\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nexport default class BorderlessButton extends React.Component {\n  static propTypes = {\n    ...BaseButton.propTypes,\n    borderless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      Animated.spring(this._opacity, {\n        stiffness: 1000,\n        damping: 500,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n        toValue: active ? this.props.activeOpacity : 1,\n        useNativeDriver: true,\n      }).start();\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, enabled, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this._onActiveStateChange}\n        style={[\n          style,\n          Platform.OS === 'ios' && enabled && { opacity: this._opacity },\n        ]}\n      >\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}